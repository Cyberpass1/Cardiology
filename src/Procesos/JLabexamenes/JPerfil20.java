/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Procesos.JLabexamenes;

import Clases.Encriptar;
import Clases.EnlaceBd;
import Clases.JCPacientes;
import Clases.JPacientesDao;
import Clases.PdfVO;
import Clases.Validar;
import Menu.Mprincipal;
import Clases.PdfDAO1;
import Clases.Tabla_PdfVO;
import Clases.Temporal;
import Clases.sql;
import Procesos.JLaboratorio;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.ExceptionConverter;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfAction;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FCGinebraI
 */
public class JPerfil20 extends javax.swing.JInternalFrame {

    /**
     * Creates new form JERutina
     */
    public JPerfil20() {
    initComponents();
    ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
    informacionpdf();
    MaxIdestudios();
    this.JRMasculino.setSelected(true);
    JPregistro.setVisible(false);
    BtnAgregar.setVisible(false);
    IdPacientess.setVisible(false);
    CallReferencia();
    JradioPerfil.setSelected(true);
// ConocerUsuario();
    }
     

 String  empresa, rif, ubicacion, telefonos, piepagina;
   public void informacionpdf() {

   Connection con=null;
   EnlaceBd cn = new EnlaceBd();
   PreparedStatement ps=null;
   ResultSet rs=null;
   
        try {

            String sql = "select * from tableinfopdfs";

            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                empresa = rs.getString("nombrempresa");
                rif = rs.getString("rif");
                ubicacion = rs.getString("ubicacion");
                telefonos = rs.getString("telefonos");
                piepagina = rs.getString("infopiepagina");
               
            }

        } catch (Exception e) {System.out.println(e);
        }  
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        BtnAgregar = new javax.swing.JButton();
        BtnCancelar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        JPregistro = new javax.swing.JPanel();
        TXTPnombre = new javax.swing.JTextField();
        TXTPcorreo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        JRMasculino = new javax.swing.JRadioButton();
        JRfemenino = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TXTPdireccion = new javax.swing.JTextArea();
        FechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel111 = new javax.swing.JLabel();
        TXTPtelefono = new javax.swing.JFormattedTextField();
        TXTPapellido = new javax.swing.JTextField();
        TXTPcedula = new javax.swing.JTextField();
        BtnSearch = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        IdPacientess = new javax.swing.JTextField();
        FechaAc8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jButton34 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        FechaAc6 = new javax.swing.JLabel();
        JcheckUro = new javax.swing.JCheckBox();
        JcheckCopro = new javax.swing.JCheckBox();
        JCheckppt = new javax.swing.JCheckBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        TXTCALCIO = new javax.swing.JTextField();
        TXTHDL = new javax.swing.JTextField();
        TXTRIGLICERIDOS = new javax.swing.JTextField();
        TXTCOLESTEROL = new javax.swing.JTextField();
        TXTACIDOURICO = new javax.swing.JTextField();
        TXTCREATININA = new javax.swing.JTextField();
        TXTUREA = new javax.swing.JTextField();
        TXTGLICEMIA = new javax.swing.JTextField();
        TXTLDL = new javax.swing.JTextField();
        TXTFOSFATA = new javax.swing.JTextField();
        TXTRELACION = new javax.swing.JTextField();
        TXTGLOBULINAS = new javax.swing.JTextField();
        TXTALBUMINA = new javax.swing.JTextField();
        TXTPROTEINAS = new javax.swing.JTextField();
        TXTBILIINDIRECTA = new javax.swing.JTextField();
        TXTBILIDIRECTA = new javax.swing.JTextField();
        TXTBILITOTAL = new javax.swing.JTextField();
        TXTVLDL = new javax.swing.JTextField();
        TXTTGO = new javax.swing.JTextField();
        TXTTGP = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        TxtLeucocitos = new javax.swing.JTextField();
        TxtLinfocitos = new javax.swing.JTextField();
        TxtNeutrofilos = new javax.swing.JTextField();
        TxtHemoglobina = new javax.swing.JTextField();
        TxtHematocrito = new javax.swing.JTextField();
        TxtVCM = new javax.swing.JTextField();
        TxtPlaquetas = new javax.swing.JTextField();
        TXtCHCM = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        TXTVDRL = new javax.swing.JTextField();
        TXTHLV = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        JpanelUro = new javax.swing.JPanel();
        JCcolor1 = new javax.swing.JComboBox<>();
        JCph = new javax.swing.JComboBox<>();
        JCnitridos = new javax.swing.JComboBox<>();
        JCglucosa1 = new javax.swing.JComboBox<>();
        TxtOlor1 = new javax.swing.JTextField();
        JCcuerposCe = new javax.swing.JComboBox<>();
        JCurobilinogeno1 = new javax.swing.JComboBox<>();
        JCproteinas = new javax.swing.JComboBox<>();
        TxtDensidad = new javax.swing.JTextField();
        JCaspecto = new javax.swing.JComboBox<>();
        JChemoglobina = new javax.swing.JComboBox<>();
        JChemoglobina1 = new javax.swing.JComboBox<>();
        JCbilirrubina = new javax.swing.JComboBox<>();
        JCbacterias = new javax.swing.JComboBox<>();
        JCEP = new javax.swing.JComboBox<>();
        TxtLeucositosOrina = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        TxtHematies = new javax.swing.JTextField();
        TxtCelulasredondas = new javax.swing.JTextField();
        TxtFilamentos = new javax.swing.JTextField();
        JpanelCopro = new javax.swing.JPanel();
        JCcolor4 = new javax.swing.JComboBox<>();
        JCreaccion1 = new javax.swing.JComboBox<>();
        JCmoco = new javax.swing.JComboBox<>();
        JCAspect = new javax.swing.JComboBox<>();
        JCconsistencia = new javax.swing.JComboBox<>();
        JColor = new javax.swing.JComboBox<>();
        JCrestos = new javax.swing.JComboBox<>();
        JCsangre1 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        JtextMicroscopio = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        TXTCALCIO1 = new javax.swing.JTextField();
        TXTHDL1 = new javax.swing.JTextField();
        TXTRIGLICERIDOS1 = new javax.swing.JTextField();
        TXTCOLESTEROL1 = new javax.swing.JTextField();
        TXTACIDOURICO1 = new javax.swing.JTextField();
        TXTCREATININA1 = new javax.swing.JTextField();
        TXTUREA1 = new javax.swing.JTextField();
        TXTGLICEMIA1 = new javax.swing.JTextField();
        TXTLDL1 = new javax.swing.JTextField();
        TXTFOSFATA1 = new javax.swing.JTextField();
        TXTRELACION1 = new javax.swing.JTextField();
        TXTGLOBULINAS1 = new javax.swing.JTextField();
        TXTALBUMINA1 = new javax.swing.JTextField();
        TXTPROTEINAS1 = new javax.swing.JTextField();
        TXTBILIINDIRECTA1 = new javax.swing.JTextField();
        TXTBILIDIRECTA1 = new javax.swing.JTextField();
        TXTBILITOTAL1 = new javax.swing.JTextField();
        TXTVLDL1 = new javax.swing.JTextField();
        TXTTGO1 = new javax.swing.JTextField();
        TXTTGP1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        TxtPlaquetas1 = new javax.swing.JTextField();
        TXtCHCM1 = new javax.swing.JTextField();
        TxtVCM1 = new javax.swing.JTextField();
        TxtHematocrito1 = new javax.swing.JTextField();
        TxtHemoglobina1 = new javax.swing.JTextField();
        TxtNeutrofilos1 = new javax.swing.JTextField();
        TxtLinfocitos1 = new javax.swing.JTextField();
        TxtLeucocitos1 = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        TXTPROTROMBINA = new javax.swing.JTextField();
        TXTPARCIAL = new javax.swing.JTextField();
        TXTVSG = new javax.swing.JTextField();
        TXTRPC = new javax.swing.JTextField();
        TXTDPC = new javax.swing.JTextField();
        TXTVRH = new javax.swing.JTextField();
        TXTM = new javax.swing.JTextField();
        TXTKIDS = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jButton23 = new javax.swing.JButton();
        TXTUNID = new javax.swing.JTextField();
        TXTUNID2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        JradioPerfil = new javax.swing.JRadioButton();
        Jradioreferencias = new javax.swing.JRadioButton();
        JradioUroanalisis = new javax.swing.JRadioButton();
        JradioPtt = new javax.swing.JRadioButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnAgregar.setText("Agregar");
        BtnAgregar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        BtnAgregar.setContentAreaFilled(false);
        BtnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });
        jPanel3.add(BtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 120, 30));

        BtnCancelar.setText("NUEVO");
        BtnCancelar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        BtnCancelar.setContentAreaFilled(false);
        BtnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancelarActionPerformed(evt);
            }
        });
        jPanel3.add(BtnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 120, 30));

        jPanel9.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 300, 70));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setEnabled(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JPregistro.setBackground(new java.awt.Color(255, 255, 255));
        JPregistro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TXTPnombre.setEditable(false);
        TXTPnombre.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nombre")));
        TXTPnombre.setOpaque(false);
        TXTPnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTPnombreActionPerformed(evt);
            }
        });
        TXTPnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPnombreKeyTyped(evt);
            }
        });
        JPregistro.add(TXTPnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 120, 50));

        TXTPcorreo.setEditable(false);
        TXTPcorreo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nombre"), "Correo"));
        TXTPcorreo.setOpaque(false);
        TXTPcorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPcorreoKeyTyped(evt);
            }
        });
        JPregistro.add(TXTPcorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 120, 50));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Sexo"));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JRMasculino.setBackground(new java.awt.Color(255, 255, 255));
        JRMasculino.setText("Masculino");
        JRMasculino.setEnabled(false);
        JRMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRMasculinoActionPerformed(evt);
            }
        });
        jPanel5.add(JRMasculino, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        JRfemenino.setBackground(new java.awt.Color(255, 255, 255));
        JRfemenino.setText("Femenino");
        JRfemenino.setEnabled(false);
        JRfemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JRfemeninoActionPerformed(evt);
            }
        });
        jPanel5.add(JRfemenino, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, -1, -1));

        JPregistro.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 250, 50));

        TXTPdireccion.setEditable(false);
        TXTPdireccion.setColumns(20);
        TXTPdireccion.setRows(5);
        TXTPdireccion.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Dirección"));
        TXTPdireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPdireccionKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(TXTPdireccion);

        JPregistro.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 250, 130));

        FechaNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        FechaNacimiento.setToolTipText("");
        FechaNacimiento.setEnabled(false);
        FechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JPregistro.add(FechaNacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 140, 30));

        jLabel111.setBackground(new java.awt.Color(0, 0, 0));
        jLabel111.setFont(new java.awt.Font("Agency FB", 1, 14)); // NOI18N
        jLabel111.setText("Fecha de nacimiento");
        JPregistro.add(jLabel111, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 60));

        TXTPtelefono.setEditable(false);
        TXTPtelefono.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Telefono"));
        try {
            TXTPtelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        TXTPtelefono.setOpaque(false);
        TXTPtelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTPtelefonoActionPerformed(evt);
            }
        });
        JPregistro.add(TXTPtelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 120, 50));

        TXTPapellido.setEditable(false);
        TXTPapellido.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nombre"), "Apellido"));
        TXTPapellido.setOpaque(false);
        TXTPapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTPapellidoActionPerformed(evt);
            }
        });
        TXTPapellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPapellidoKeyTyped(evt);
            }
        });
        JPregistro.add(TXTPapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 120, 50));

        jPanel1.add(JPregistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 400, -1));

        TXTPcedula.setText("V-");
        TXTPcedula.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cédula"));
        TXTPcedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTPcedulaActionPerformed(evt);
            }
        });
        TXTPcedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPcedulaKeyTyped(evt);
            }
        });
        jPanel1.add(TXTPcedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 180, 50));

        BtnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/magnifier-1_icon-icons.com_56924.png"))); // NOI18N
        BtnSearch.setBorderPainted(false);
        BtnSearch.setContentAreaFilled(false);
        BtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(BtnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 50, 50));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 400, 20));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 400, 20));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 400, 20));

        IdPacientess.setText("ID");
        jPanel1.add(IdPacientess, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, 50));

        FechaAc8.setBackground(new java.awt.Color(0, 0, 0));
        FechaAc8.setFont(new java.awt.Font("Agency FB", 0, 18)); // NOI18N
        FechaAc8.setText("                         P A C I E N T E ");
        jPanel1.add(FechaAc8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 20));

        jTabbedPane1.addTab("tab1", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PACIENTE", "CEDULA", "EDAD", "SEXO", "CORREO", "ESTUDIO"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 370, 450));

        jTabbedPane1.addTab("tab2", jPanel2);

        jPanel9.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 550));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton34.setBackground(new java.awt.Color(255, 255, 255));
        jButton34.setText("Imprimir");
        jButton34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton34.setContentAreaFilled(false);
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, 130, 30));

        jButton20.setText("Cancelar");
        jButton20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton20.setContentAreaFilled(false);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 130, 30));

        FechaAc6.setBackground(new java.awt.Color(0, 0, 0));
        FechaAc6.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        FechaAc6.setText("Agregar al estudio:");
        jPanel13.add(FechaAc6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 90, 40));

        JcheckUro.setBackground(new java.awt.Color(255, 255, 255));
        JcheckUro.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JcheckUro.setText("Uroanálisis");
        JcheckUro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcheckUroActionPerformed(evt);
            }
        });
        jPanel13.add(JcheckUro, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, -1, -1));

        JcheckCopro.setBackground(new java.awt.Color(255, 255, 255));
        JcheckCopro.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JcheckCopro.setText("Coproanálisis");
        JcheckCopro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcheckCoproActionPerformed(evt);
            }
        });
        jPanel13.add(JcheckCopro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        JCheckppt.setBackground(new java.awt.Color(255, 255, 255));
        JCheckppt.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCheckppt.setText("PPT");
        JCheckppt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCheckpptActionPerformed(evt);
            }
        });
        jPanel13.add(JCheckppt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jPanel9.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 520, 700, 50));

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane2.setEnabled(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematología"), "QUIMICA SANGUINEA"));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TXTCALCIO.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Calcio"));
        TXTCALCIO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCALCIOKeyTyped(evt);
            }
        });
        jPanel10.add(TXTCALCIO, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 110, 40));

        TXTHDL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "H.D.L colesterol"));
        TXTHDL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTHDLActionPerformed(evt);
            }
        });
        TXTHDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTHDLKeyTyped(evt);
            }
        });
        jPanel10.add(TXTHDL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 110, 40));

        TXTRIGLICERIDOS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Trigliceridos"));
        TXTRIGLICERIDOS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTRIGLICERIDOSKeyTyped(evt);
            }
        });
        jPanel10.add(TXTRIGLICERIDOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 110, 40));

        TXTCOLESTEROL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Colesterol"));
        TXTCOLESTEROL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCOLESTEROLKeyTyped(evt);
            }
        });
        jPanel10.add(TXTCOLESTEROL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 110, 40));

        TXTACIDOURICO.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ácido Urico"));
        TXTACIDOURICO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTACIDOURICOKeyTyped(evt);
            }
        });
        jPanel10.add(TXTACIDOURICO, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 40));

        TXTCREATININA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Creatinina"));
        TXTCREATININA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCREATININAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTCREATININA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, 40));

        TXTUREA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Urea"));
        TXTUREA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTUREAActionPerformed(evt);
            }
        });
        TXTUREA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTUREAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTUREA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, 40));

        TXTGLICEMIA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Glicemia"));
        TXTGLICEMIA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTGLICEMIAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTGLICEMIA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, 40));

        TXTLDL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "L.D.L colesterol"));
        TXTLDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTLDLKeyTyped(evt);
            }
        });
        jPanel10.add(TXTLDL, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 110, 40));

        TXTFOSFATA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Fosfata Alcalina"));
        TXTFOSFATA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTFOSFATAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTFOSFATA, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 110, 40));

        TXTRELACION.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Rel. ALB/GLOB"));
        TXTRELACION.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTRELACIONKeyTyped(evt);
            }
        });
        jPanel10.add(TXTRELACION, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 110, 40));

        TXTGLOBULINAS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Globulinas"));
        TXTGLOBULINAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTGLOBULINASActionPerformed(evt);
            }
        });
        TXTGLOBULINAS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTGLOBULINASKeyTyped(evt);
            }
        });
        jPanel10.add(TXTGLOBULINAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 110, 40));

        TXTALBUMINA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Albumina"));
        TXTALBUMINA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTALBUMINAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTALBUMINA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 110, 40));

        TXTPROTEINAS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Proteinas Totales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        TXTPROTEINAS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPROTEINASKeyTyped(evt);
            }
        });
        jPanel10.add(TXTPROTEINAS, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 110, 40));

        TXTBILIINDIRECTA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Indirecta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        TXTBILIINDIRECTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILIINDIRECTAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTBILIINDIRECTA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 110, 40));

        TXTBILIDIRECTA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Directa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        TXTBILIDIRECTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILIDIRECTAKeyTyped(evt);
            }
        });
        jPanel10.add(TXTBILIDIRECTA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 110, 40));

        TXTBILITOTAL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Total"));
        TXTBILITOTAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTBILITOTALActionPerformed(evt);
            }
        });
        TXTBILITOTAL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILITOTALKeyTyped(evt);
            }
        });
        jPanel10.add(TXTBILITOTAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 110, 40));

        TXTVLDL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "V.L.D.L colesterol", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        TXTVLDL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTVLDLKeyTyped(evt);
            }
        });
        jPanel10.add(TXTVLDL, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 110, 40));

        TXTTGO.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "T.G.O"));
        TXTTGO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTTGOKeyTyped(evt);
            }
        });
        jPanel10.add(TXTTGO, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 110, 40));

        TXTTGP.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "T.G.P"));
        TXTTGP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTTGPActionPerformed(evt);
            }
        });
        TXTTGP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTTGPKeyTyped(evt);
            }
        });
        jPanel10.add(TXTTGP, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 110, 40));

        jPanel4.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 400, 440));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "HEMATOLOGÍA"));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TxtLeucocitos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Leucocitos"));
        TxtLeucocitos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtLeucocitosKeyTyped(evt);
            }
        });
        jPanel11.add(TxtLeucocitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 110, 40));

        TxtLinfocitos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Linfocitos"));
        TxtLinfocitos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtLinfocitosActionPerformed(evt);
            }
        });
        TxtLinfocitos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtLinfocitosKeyTyped(evt);
            }
        });
        jPanel11.add(TxtLinfocitos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 110, 40));

        TxtNeutrofilos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Neutrofilos"));
        TxtNeutrofilos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtNeutrofilosKeyTyped(evt);
            }
        });
        jPanel11.add(TxtNeutrofilos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 110, 40));

        TxtHemoglobina.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hemoglobina"));
        TxtHemoglobina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtHemoglobinaKeyTyped(evt);
            }
        });
        jPanel11.add(TxtHemoglobina, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 110, 40));

        TxtHematocrito.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematocrito"));
        TxtHematocrito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtHematocritoKeyTyped(evt);
            }
        });
        jPanel11.add(TxtHematocrito, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 110, 40));

        TxtVCM.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "VCM"));
        TxtVCM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtVCMKeyTyped(evt);
            }
        });
        jPanel11.add(TxtVCM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 110, 40));

        TxtPlaquetas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Plaquetas"));
        TxtPlaquetas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtPlaquetasKeyTyped(evt);
            }
        });
        jPanel11.add(TxtPlaquetas, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 110, 40));

        TXtCHCM.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CHCM"));
        TXtCHCM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXtCHCMActionPerformed(evt);
            }
        });
        TXtCHCM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXtCHCMKeyTyped(evt);
            }
        });
        jPanel11.add(TXtCHCM, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 110, 40));

        jPanel4.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 260, 230));
        jPanel4.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "SEROLOGÍA"));
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TXTVDRL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "VDRL"));
        TXTVDRL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTVDRLActionPerformed(evt);
            }
        });
        TXTVDRL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTVDRLKeyTyped(evt);
            }
        });
        jPanel15.add(TXTVDRL, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 210, 40));

        TXTHLV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Negativo", "Positivo" }));
        TXTHLV.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))), "V.I.H"));
        TXTHLV.setOpaque(false);
        jPanel15.add(TXTHLV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 210, 50));

        jPanel4.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 260, 190));

        jTabbedPane2.addTab("Perfil 20", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JpanelUro.setBackground(new java.awt.Color(255, 255, 255));
        JpanelUro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "UROANÁLISIS"));
        JpanelUro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JCcolor1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCcolor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AMARILLO", "AMBAR", "ROJO" }));
        JCcolor1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Color"));
        JCcolor1.setOpaque(false);
        JpanelUro.add(JCcolor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 100, 40));

        JCph.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCph.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ÁCIDO", "ALCALINO", "NEUTRA" }));
        JCph.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "PH"));
        JCph.setOpaque(false);
        JpanelUro.add(JCph, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 100, 40));

        JCnitridos.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCnitridos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCnitridos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Nitritos"));
        JCnitridos.setOpaque(false);
        JCnitridos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCnitridosActionPerformed(evt);
            }
        });
        JpanelUro.add(JCnitridos, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 110, 40));

        JCglucosa1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCglucosa1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCglucosa1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Glucosa"));
        JCglucosa1.setOpaque(false);
        JCglucosa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCglucosa1ActionPerformed(evt);
            }
        });
        JpanelUro.add(JCglucosa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 100, 40));

        TxtOlor1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Olor"));
        TxtOlor1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtOlor1KeyTyped(evt);
            }
        });
        JpanelUro.add(TxtOlor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 100, 40));

        JCcuerposCe.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCcuerposCe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCcuerposCe.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cuerpos Cétonicos"));
        JCcuerposCe.setOpaque(false);
        JpanelUro.add(JCcuerposCe, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 110, 40));

        JCurobilinogeno1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCurobilinogeno1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCurobilinogeno1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Urobilinógeno"));
        JCurobilinogeno1.setOpaque(false);
        JpanelUro.add(JCurobilinogeno1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 110, 40));

        JCproteinas.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCproteinas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCproteinas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Proteínas"));
        JCproteinas.setOpaque(false);
        JpanelUro.add(JCproteinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 100, 40));

        TxtDensidad.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Densidad"));
        TxtDensidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtDensidadKeyTyped(evt);
            }
        });
        JpanelUro.add(TxtDensidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 40));

        JCaspecto.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCaspecto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CLARO", "LIGERO TURBIO", "TURBIO" }));
        JCaspecto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Aspecto"));
        JCaspecto.setOpaque(false);
        JCaspecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCaspectoActionPerformed(evt);
            }
        });
        JpanelUro.add(JCaspecto, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 100, 40));

        JChemoglobina.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JChemoglobina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JChemoglobina.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hemoglobina"));
        JChemoglobina.setOpaque(false);
        JpanelUro.add(JChemoglobina, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 100, 40));

        JChemoglobina1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        JChemoglobina1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JChemoglobina1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Pigmentos Biliares"));
        JChemoglobina1.setOpaque(false);
        JpanelUro.add(JChemoglobina1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 110, 40));

        JCbilirrubina.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCbilirrubina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSTIVO 1+", "POSITIVO 2+", "POSITIVO 3+", "POSITIVO 4+", "TRAZAS", "LIG. TRAZAS" }));
        JCbilirrubina.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina"));
        JCbilirrubina.setLightWeightPopupEnabled(false);
        JCbilirrubina.setOpaque(false);
        JpanelUro.add(JCbilirrubina, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, 100, 40));

        JCbacterias.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCbacterias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ESCASAS", "MODERDAS", "ABUDANTES" }));
        JCbacterias.setBorder(javax.swing.BorderFactory.createTitledBorder("Bacterias"));
        JCbacterias.setOpaque(false);
        JpanelUro.add(JCbacterias, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 130, 50));

        JCEP.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCEP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ESCASAS", "MODERADAS", "ABUNDANTES" }));
        JCEP.setBorder(javax.swing.BorderFactory.createTitledBorder("Celulas E.P."));
        JCEP.setOpaque(false);
        JpanelUro.add(JCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 130, 50));

        TxtLeucositosOrina.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Leucocitos"));
        TxtLeucositosOrina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtLeucositosOrinaActionPerformed(evt);
            }
        });
        TxtLeucositosOrina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtLeucositosOrinaKeyTyped(evt);
            }
        });
        JpanelUro.add(TxtLeucositosOrina, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 270, 50));

        jLabel1.setText("*Campos opcionales");
        JpanelUro.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, -1, -1));

        TxtHematies.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematies"));
        TxtHematies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtHematiesActionPerformed(evt);
            }
        });
        TxtHematies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtHematiesKeyTyped(evt);
            }
        });
        JpanelUro.add(TxtHematies, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 130, 50));

        TxtCelulasredondas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Células Redondas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        TxtCelulasredondas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtCelulasredondasActionPerformed(evt);
            }
        });
        TxtCelulasredondas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCelulasredondasKeyTyped(evt);
            }
        });
        JpanelUro.add(TxtCelulasredondas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 140, 50));

        TxtFilamentos.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Filamentos de Mucina"));
        TxtFilamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtFilamentosActionPerformed(evt);
            }
        });
        TxtFilamentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtFilamentosKeyTyped(evt);
            }
        });
        JpanelUro.add(TxtFilamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 270, 50));

        jPanel6.add(JpanelUro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 270));

        JpanelCopro.setBackground(new java.awt.Color(255, 255, 255));
        JpanelCopro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "COPROANÁLISIS"));
        JpanelCopro.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JCcolor4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCcolor4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MARRÓN", "NEGRO", "VERDE", "AMARILLO", "ROJO" }));
        JCcolor4.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));
        JCcolor4.setOpaque(false);
        JpanelCopro.add(JCcolor4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 100, 40));

        JCreaccion1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCreaccion1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ÁCIDA", "ALCALINA" }));
        JCreaccion1.setBorder(javax.swing.BorderFactory.createTitledBorder("Reacción"));
        JCreaccion1.setOpaque(false);
        JpanelCopro.add(JCreaccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 90, 40));

        JCmoco.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCmoco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSITIVO" }));
        JCmoco.setBorder(javax.swing.BorderFactory.createTitledBorder("Moco"));
        JCmoco.setOpaque(false);
        JpanelCopro.add(JCmoco, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, 90, 40));

        JCAspect.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCAspect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HETEROGENEO", "HOMOGENEO" }));
        JCAspect.setBorder(javax.swing.BorderFactory.createTitledBorder("Aspecto"));
        JCAspect.setOpaque(false);
        JCAspect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCAspectActionPerformed(evt);
            }
        });
        JpanelCopro.add(JCAspect, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 100, 40));

        JCconsistencia.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCconsistencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DURA", "BLANDA", "LIQUIDA" }));
        JCconsistencia.setBorder(javax.swing.BorderFactory.createTitledBorder("Consistencia"));
        JCconsistencia.setOpaque(false);
        JpanelCopro.add(JCconsistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 100, 40));

        JColor.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FECAL", "FETIDO" }));
        JColor.setBorder(javax.swing.BorderFactory.createTitledBorder("Olor"));
        JColor.setOpaque(false);
        JpanelCopro.add(JColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 90, 40));

        JCrestos.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCrestos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AUSENTE", "PRESENTE" }));
        JCrestos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Res. Alimenticie", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10))); // NOI18N
        JCrestos.setOpaque(false);
        JpanelCopro.add(JCrestos, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 90, 40));

        JCsangre1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        JCsangre1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NEGATIVO", "POSITIVO" }));
        JCsangre1.setBorder(javax.swing.BorderFactory.createTitledBorder("Sangre"));
        JCsangre1.setOpaque(false);
        JpanelCopro.add(JCsangre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 90, 40));

        JtextMicroscopio.setColumns(20);
        JtextMicroscopio.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        JtextMicroscopio.setRows(5);
        JtextMicroscopio.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Examen Microscopio"));
        JtextMicroscopio.setMargin(new java.awt.Insets(1, 1, 1, 1));
        JtextMicroscopio.setMinimumSize(new java.awt.Dimension(0, 0));
        JtextMicroscopio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                JtextMicroscopioKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(JtextMicroscopio);

        JpanelCopro.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 330, 160));

        jPanel6.add(JpanelCopro, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 690, 220));

        jTabbedPane2.addTab("Coproanálisis & Uroanálisis", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/modificar.png"))); // NOI18N
        jButton21.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton21.setBorderPainted(false);
        jButton21.setContentAreaFilled(false);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 110, 30));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematología"), "REFERENCIAS QUIMICA SANGUINEA"));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TXTCALCIO1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Calcio"));
        TXTCALCIO1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCALCIO1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTCALCIO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 110, 40));

        TXTHDL1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "H.D.L colesterol"));
        TXTHDL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTHDL1ActionPerformed(evt);
            }
        });
        TXTHDL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTHDL1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTHDL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 110, 40));

        TXTRIGLICERIDOS1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Trigliceridos"));
        TXTRIGLICERIDOS1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTRIGLICERIDOS1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTRIGLICERIDOS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 110, 40));

        TXTCOLESTEROL1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Colesterol"));
        TXTCOLESTEROL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCOLESTEROL1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTCOLESTEROL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 110, 40));

        TXTACIDOURICO1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Ácido Urico"));
        TXTACIDOURICO1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTACIDOURICO1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTACIDOURICO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 40));

        TXTCREATININA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Creatinina"));
        TXTCREATININA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTCREATININA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTCREATININA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, 40));

        TXTUREA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Urea"));
        TXTUREA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTUREA1ActionPerformed(evt);
            }
        });
        TXTUREA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTUREA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTUREA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, 40));

        TXTGLICEMIA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Glicemia"));
        TXTGLICEMIA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTGLICEMIA1ActionPerformed(evt);
            }
        });
        TXTGLICEMIA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTGLICEMIA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTGLICEMIA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, 40));

        TXTLDL1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "L.D.L colesterol"));
        TXTLDL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTLDL1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTLDL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 110, 40));

        TXTFOSFATA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Fosfata Alcalina"));
        TXTFOSFATA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTFOSFATA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTFOSFATA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 110, 40));

        TXTRELACION1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Rel. ALB/GLOB"));
        TXTRELACION1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTRELACION1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTRELACION1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 380, 110, 40));

        TXTGLOBULINAS1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Globulinas"));
        TXTGLOBULINAS1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTGLOBULINAS1ActionPerformed(evt);
            }
        });
        TXTGLOBULINAS1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTGLOBULINAS1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTGLOBULINAS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 110, 40));

        TXTALBUMINA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Albumina"));
        TXTALBUMINA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTALBUMINA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTALBUMINA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, 110, 40));

        TXTPROTEINAS1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Proteinas Totales"));
        TXTPROTEINAS1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPROTEINAS1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTPROTEINAS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 110, 40));

        TXTBILIINDIRECTA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Indirecta"));
        TXTBILIINDIRECTA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILIINDIRECTA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTBILIINDIRECTA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 110, 40));

        TXTBILIDIRECTA1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Directa"));
        TXTBILIDIRECTA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTBILIDIRECTA1ActionPerformed(evt);
            }
        });
        TXTBILIDIRECTA1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILIDIRECTA1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTBILIDIRECTA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 110, 40));

        TXTBILITOTAL1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bilirrubina Total"));
        TXTBILITOTAL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTBILITOTAL1ActionPerformed(evt);
            }
        });
        TXTBILITOTAL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTBILITOTAL1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTBILITOTAL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 110, 40));

        TXTVLDL1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "V.L.D.L colesterol"));
        TXTVLDL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTVLDL1ActionPerformed(evt);
            }
        });
        TXTVLDL1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTVLDL1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTVLDL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 110, 40));

        TXTTGO1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "T.G.O"));
        TXTTGO1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTTGO1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTTGO1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 110, 40));

        TXTTGP1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "T.G.P"));
        TXTTGP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTTGP1ActionPerformed(evt);
            }
        });
        TXTTGP1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTTGP1KeyTyped(evt);
            }
        });
        jPanel16.add(TXTTGP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 110, 40));

        jPanel7.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 400, 430));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematología"), "REFERENCIAS HEMATOLOGÍA"));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TxtPlaquetas1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Plaquetas"));
        TxtPlaquetas1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtPlaquetas1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtPlaquetas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 110, 40));

        TXtCHCM1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "CHCM"));
        TXtCHCM1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXtCHCM1ActionPerformed(evt);
            }
        });
        TXtCHCM1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXtCHCM1KeyTyped(evt);
            }
        });
        jPanel8.add(TXtCHCM1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 110, 40));

        TxtVCM1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "VCM"));
        TxtVCM1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtVCM1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtVCM1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 110, 40));

        TxtHematocrito1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hematocrito"));
        TxtHematocrito1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtHematocrito1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtHematocrito1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 110, 40));

        TxtHemoglobina1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Hemoglobina"));
        TxtHemoglobina1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtHemoglobina1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtHemoglobina1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 110, 40));

        TxtNeutrofilos1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Neutrofilos"));
        TxtNeutrofilos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNeutrofilos1ActionPerformed(evt);
            }
        });
        TxtNeutrofilos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtNeutrofilos1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtNeutrofilos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 110, 40));

        TxtLinfocitos1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Linfocitos"));
        TxtLinfocitos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtLinfocitos1ActionPerformed(evt);
            }
        });
        TxtLinfocitos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtLinfocitos1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtLinfocitos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 110, 40));

        TxtLeucocitos1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Leucocitos"));
        TxtLeucocitos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtLeucocitos1KeyTyped(evt);
            }
        });
        jPanel8.add(TxtLeucocitos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, 40));

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, 230));

        jTabbedPane2.addTab("Referencias", jPanel7);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "TIEMPOS DE COAGULACIÓN Y VELOCIDAD DE SEDIMENTACIÓN "));
        jPanel25.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TXTPROTROMBINA.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tiempo de Protrombina"));
        TXTPROTROMBINA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPROTROMBINAKeyTyped(evt);
            }
        });
        jPanel25.add(TXTPROTROMBINA, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 220, 40));

        TXTPARCIAL.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Tiempo Parcial de Tromboplastina"));
        TXTPARCIAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTPARCIALActionPerformed(evt);
            }
        });
        TXTPARCIAL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTPARCIALKeyTyped(evt);
            }
        });
        jPanel25.add(TXTPARCIAL, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 220, 40));

        TXTVSG.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "VSG"));
        TXTVSG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTVSGKeyTyped(evt);
            }
        });
        jPanel25.add(TXTVSG, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 220, 40));

        TXTRPC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Referencia RPC"));
        TXTRPC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTRPCKeyTyped(evt);
            }
        });
        jPanel25.add(TXTRPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 60, 150, 40));

        TXTDPC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Referencia DPC"));
        TXTDPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTDPCActionPerformed(evt);
            }
        });
        TXTDPC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTDPCKeyTyped(evt);
            }
        });
        jPanel25.add(TXTDPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 150, 40));

        TXTVRH.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Referencia VRH"));
        TXTVRH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTVRHKeyTyped(evt);
            }
        });
        jPanel25.add(TXTVRH, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 190, 40));

        TXTM.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Referencia M"));
        TXTM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTMKeyTyped(evt);
            }
        });
        jPanel25.add(TXTM, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 190, 40));

        TXTKIDS.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Referencia Niños"));
        TXTKIDS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTKIDSKeyTyped(evt);
            }
        });
        jPanel25.add(TXTKIDS, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, 190, 40));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel25.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 40, 470));

        jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ImgBotones/modificar.png"))); // NOI18N
        jButton23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton23.setBorderPainted(false);
        jButton23.setContentAreaFilled(false);
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel25.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, 110, 30));

        TXTUNID.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "RPC="));
        TXTUNID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTUNIDActionPerformed(evt);
            }
        });
        TXTUNID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTUNIDKeyTyped(evt);
            }
        });
        jPanel25.add(TXTUNID, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, 90, 40));

        TXTUNID2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "DPC="));
        TXTUNID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TXTUNID2ActionPerformed(evt);
            }
        });
        TXTUNID2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TXTUNID2KeyTyped(evt);
            }
        });
        jPanel25.add(TXTUNID2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 90, 40));

        jLabel2.setText("Referencias Tiempos de Coagulación");
        jPanel25.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, -1, -1));

        jPanel18.add(jPanel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 660, 480));

        jTabbedPane2.addTab("Coagulacion", jPanel18);

        jPanel9.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 700, 520));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JradioPerfil.setBackground(new java.awt.Color(255, 255, 255));
        JradioPerfil.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JradioPerfil.setText("Ver perfil 20");
        JradioPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JradioPerfilActionPerformed(evt);
            }
        });
        jPanel12.add(JradioPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        Jradioreferencias.setBackground(new java.awt.Color(255, 255, 255));
        Jradioreferencias.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Jradioreferencias.setText("Ver Referencias ");
        Jradioreferencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JradioreferenciasActionPerformed(evt);
            }
        });
        jPanel12.add(Jradioreferencias, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        JradioUroanalisis.setBackground(new java.awt.Color(255, 255, 255));
        JradioUroanalisis.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        JradioUroanalisis.setText("Uroanálisis & Coproanálisis");
        JradioUroanalisis.setEnabled(false);
        JradioUroanalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JradioUroanalisisActionPerformed(evt);
            }
        });
        jPanel12.add(JradioUroanalisis, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        JradioPtt.setBackground(new java.awt.Color(255, 255, 255));
        JradioPtt.setText("Tiempos de Coagulación (PPT)");
        JradioPtt.setEnabled(false);
        JradioPtt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JradioPttActionPerformed(evt);
            }
        });
        jPanel12.add(JradioPtt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, -1, -1));

        jPanel9.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 700, 40));

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
       
        
                   if (TXTPapellido.getText().equals("") 
                   
                   || TxtNeutrofilos1.getText().equals("")
                   || TxtHemoglobina1.getText().equals("")
                   || TxtHematocrito1.getText().equals("")
                   || TxtVCM1.getText().equals("")
                   || TXtCHCM1.getText().equals("")
                   || TxtLinfocitos1.getText().equals("")
                   || TxtLeucocitos1.getText().equals("")
                   || TxtPlaquetas1.getText().equals("")
                   
                   
                   || TxtNeutrofilos.getText().equals("")
                   || TxtHemoglobina.getText().equals("")
                   || TxtHematocrito.getText().equals("")
                   || TxtVCM.getText().equals("")
                   || TXtCHCM.getText().equals("")
                   || TxtLinfocitos.getText().equals("")
                   || TxtLeucocitos.getText().equals("")
                   || TxtPlaquetas.getText().equals("")
                   
                   
                   || TXTPnombre.getText().equals("")
                   || TXTPcedula.getText().equals("") 
                   || TXTPcorreo.getText().equals("") 
                   || TXTPtelefono.getText().equals("") 
                   || TXTPdireccion.getText().equals("")
                   
                   || TXTGLICEMIA1.getText().equals("")
                   || TXTUREA1.getText().equals("")
                   || TXTCREATININA1.getText().equals("")
                   || TXTACIDOURICO1.getText().equals("")
                   || TXTCOLESTEROL1.getText().equals("")
                   || TXTRIGLICERIDOS1.getText().equals("")
                   || TXTHDL1.getText().equals("")
                   || TXTLDL1.getText().equals("")
                   || TXTVLDL1.getText().equals("")
                   || TXTBILITOTAL1.getText().equals("")
                   || TXTBILIDIRECTA1.getText().equals("")
                   || TXTBILIINDIRECTA1.getText().equals("")
                   || TXTPROTEINAS1.getText().equals("")
                   || TXTALBUMINA1.getText().equals("")
                   || TXTGLOBULINAS1.getText().equals("")
                   || TXTRELACION1.getText().equals("")
                   || TXTTGO1.getText().equals("")
                   || TXTTGP1.getText().equals("")
                   || TXTCALCIO1.getText().equals("")
                   || TXTFOSFATA1.getText().equals("")
                   
                   || TXTGLICEMIA.getText().equals("")
                   || TXTUREA.getText().equals("")
                   || TXTCREATININA.getText().equals("")
                   || TXTACIDOURICO.getText().equals("")
                   || TXTCOLESTEROL.getText().equals("")
                   || TXTRIGLICERIDOS.getText().equals("")
                   || TXTHDL.getText().equals("")
                   || TXTLDL.getText().equals("")
                   || TXTVLDL.getText().equals("")
                   || TXTBILITOTAL.getText().equals("")
                   || TXTBILIDIRECTA.getText().equals("")
                   || TXTBILIINDIRECTA.getText().equals("")
                   || TXTPROTEINAS.getText().equals("")
                   || TXTALBUMINA.getText().equals("")
                   || TXTGLOBULINAS.getText().equals("")
                   || TXTRELACION.getText().equals("")
                   || TXTTGO.getText().equals("")
                   || TXTTGP.getText().equals("")
                   || TXTCALCIO.getText().equals("")
                   || TXTFOSFATA.getText().equals("")
                   
                   
                   )
            
           
           
           
           {
             
               
               
               
            JOptionPane.showMessageDialog(null, "ASIGNE UN PACIENTE, Y VERIFIQUE QUE TODOS LOS CAMPOS SE ENCUENTRAN COMPLETADOS", "LLENADO DE CAMPOS", JOptionPane.INFORMATION_MESSAGE);

        }
        
           
           
           
           
           
           
        else{   JOptionPane.showMessageDialog(null, "GENERANDO REPORTE...","ESTUDIO",1); MaxIdestudios();  pdf();  guardarReporte();   cancelarexamen();}
        
        
        
        
        
        
   
    }//GEN-LAST:event_jButton34ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed

        
                if (JOptionPane.showConfirmDialog(rootPane, "¿Está seguro que desea cancelar los resultado?",
            "Cancelar", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)  {
        cancelarexamen(); CallReferencia(); }
                
                else{}
                
    }//GEN-LAST:event_jButton20ActionPerformed

    private void BtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSearchActionPerformed
        if(TXTPcedula.getText().equals("V-") || TXTPcedula.getText().equals("") )
        {
            JOptionPane.showMessageDialog(null, "CAMPO VACIO O CÉDULA INVALIDA", "CEDULA", JOptionPane.ERROR_MESSAGE);
            TXTPcedula.setText("V-");
        }
        else
        {
            Callpacient();
            

        }
    }//GEN-LAST:event_BtnSearchActionPerformed

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed

        Connection con;
        EnlaceBd cn = new EnlaceBd();
        PreparedStatement ps;
        ResultSet rs;

        Pattern pattern = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
        String Correo = TXTPcorreo.getText();
        Matcher mather = pattern.matcher(Correo);

        if (TXTPapellido.getText().equals("") || TXTPnombre.getText().equals("") || FechaNacimiento.getDate()==null
            || TXTPcedula.getText().equals("") || TXTPcorreo.getText().equals("") || TXTPtelefono.getText().equals("") || TXTPdireccion.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "TODOS LOS CAMPOS SON OBLIGATORIOS", "LLENADO DE CAMPOS", JOptionPane.INFORMATION_MESSAGE);

        } else if (mather.find() == false) {
            JOptionPane.showMessageDialog(null, "EMAIL INVALIDO, VERIFIQUE", "EMAIL INVALIDO", JOptionPane.ERROR_MESSAGE);
            this.TXTPcorreo.requestFocus();
        }

        else {

            String sql="SELECT Idpaciente, Nombre, Apellido, Cedula, Telefono, Direccion FROM table_paciente  WHERE Cedula='"+ TXTPcedula.getText() +"'";

            try{
                con = cn.getConnection();
                ps = con.prepareStatement(sql);
                rs = ps.executeQuery();
                if(rs.next()){JOptionPane.showMessageDialog(null, "EL PACIENTE YA SE ENCUENTRA", "DATO DUPLICADO",JOptionPane.ERROR_MESSAGE);}

                else{
                    AuditoriaAgregar();
                    AgregarPaciente();
                    Callpacient();
                    BtnAgregar.setEnabled(false);
                    //      TxtMotivo.setEnabled(true);

                }

            }catch(Exception e){System.out.println(e);}
        }
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void BtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancelarActionPerformed
        limpiarCampos();
        DesactivarCampos();
        JPregistro.setVisible(false);
        TXTPcedula.setText("V-");
        BtnAgregar.setEnabled(true);
        BtnSearch.setEnabled(true);  
        TXTPcedula.setEnabled(true);
        BtnAgregar.setEnabled(false);
        
    }//GEN-LAST:event_BtnCancelarActionPerformed

    private void TXTPcedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTPcedulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPcedulaActionPerformed

    private void TXTPcedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPcedulaKeyTyped
   char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='V' || car=='E' || car =='J' || car=='-' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTPcedula.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='V' && car!='E' && car != 'J' && car!='-' || car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }

    }//GEN-LAST:event_TXTPcedulaKeyTyped

    private void TXTPnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTPnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPnombreActionPerformed

    private void TXTPnombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPnombreKeyTyped
          va.longitud(TXTPnombre.getText(), 30, evt);
    }//GEN-LAST:event_TXTPnombreKeyTyped

    private void TXTPapellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPapellidoKeyTyped
        va.longitud(TXTPapellido.getText(), 30, evt);
    }//GEN-LAST:event_TXTPapellidoKeyTyped

    private void TXTPcorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPcorreoKeyTyped
         va.longitud(TXTPcorreo.getText(), 30, evt);
    }//GEN-LAST:event_TXTPcorreoKeyTyped

    private void TXTPdireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPdireccionKeyTyped
         va.longitud(TXTPdireccion .getText(), 80, evt);
    }//GEN-LAST:event_TXTPdireccionKeyTyped

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
    
                if (JOptionPane.showConfirmDialog(rootPane, "¿Está seguro que desea actualizar los valores referenciales?",
            "Valores Referenciales", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)  {
     AuditoriaModificar();   ActualizarReferencia(); CallReferencia(); }
                
                else{CallReferencia();}      
        
        
    }//GEN-LAST:event_jButton21ActionPerformed

    private void TXTPapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTPapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPapellidoActionPerformed

    private void JcheckCoproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcheckCoproActionPerformed
        if (JcheckCopro.isSelected()==true)  { JradioUroanalisis.setEnabled(true);   } 
        else  if (JcheckCopro.isSelected()==false)  { JradioUroanalisis.setEnabled(false);   } 
       /* 
           if (JcheckCopro.isSelected()==false)  {  JpanelCopro.setVisible(false);}
           else if (JcheckCopro.isSelected()==true)  {JradioUroanalisis.setEnabled(true);  JpanelCopro.setVisible(true);}      
           else   if (JcheckCopro.isSelected()==true && JcheckCopro.isSelected()==true  )  
           
           {
               
           JradioUroanalisis.setEnabled(true); 
           JpanelUro.setVisible(true);
           JpanelCopro.setVisible(true);
           }  
              
            
        
              
      */        
              
              
    }//GEN-LAST:event_JcheckCoproActionPerformed

    private void JcheckUroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcheckUroActionPerformed
     
          if (JcheckUro.isSelected()==true)  { JradioUroanalisis.setEnabled(true);  }    
          else  if (JcheckUro.isSelected()==false)  { JradioUroanalisis.setEnabled(false);   } 
        /*
         
           if (JcheckUro.isSelected()==false)  {  JpanelUro.setVisible(false);}
           else if (JcheckUro.isSelected()==true)  {JradioUroanalisis.setEnabled(true);  JpanelUro.setVisible(true);}      
           else   if (JcheckUro.isSelected()==true && JcheckCopro.isSelected()==true  )  
           
           {
               
           JradioUroanalisis.setEnabled(true); 
           JpanelUro.setVisible(true);
           JpanelCopro.setVisible(true);
           }  
              */
        
        
        
    }//GEN-LAST:event_JcheckUroActionPerformed

    private void TxtLeucocitos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtLeucocitos1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtLeucocitos1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==5)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtLeucocitos1KeyTyped

    private void TxtLinfocitos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtLinfocitos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtLinfocitos1ActionPerformed

    private void TxtLinfocitos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtLinfocitos1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtLinfocitos1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==2)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtLinfocitos1KeyTyped

    private void TxtNeutrofilos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNeutrofilos1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtNeutrofilos1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtNeutrofilos1KeyTyped

    private void TxtHemoglobina1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtHemoglobina1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtHemoglobina1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtHemoglobina1KeyTyped

    private void TxtHematocrito1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtHematocrito1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtHematocrito1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtHematocrito1KeyTyped

    private void TxtVCM1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtVCM1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtVCM1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtVCM1KeyTyped

    private void TXtCHCM1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXtCHCM1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXtCHCM1ActionPerformed

    private void TXtCHCM1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXtCHCM1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXtCHCM1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXtCHCM1KeyTyped

    private void TxtPlaquetas1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtPlaquetas1KeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car=='-' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtPlaquetas1.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==7)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=',' && car!='-'|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtPlaquetas1KeyTyped

    private void TXTCALCIOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCALCIOKeyTyped
                                char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTCALCIO.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTCALCIOKeyTyped

    private void TXTHDLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTHDLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTHDLActionPerformed

    private void TXTHDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTHDLKeyTyped
             char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTHDL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTHDLKeyTyped

    private void TXTRIGLICERIDOSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTRIGLICERIDOSKeyTyped
             char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTRIGLICERIDOS.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTRIGLICERIDOSKeyTyped

    private void TXTCOLESTEROLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCOLESTEROLKeyTyped
                 char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTCOLESTEROL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTCOLESTEROLKeyTyped

    private void TXTACIDOURICOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTACIDOURICOKeyTyped
               char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTACIDOURICO.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTACIDOURICOKeyTyped

    private void TXTCREATININAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCREATININAKeyTyped
           char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTCREATININA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTCREATININAKeyTyped

    private void TXTUREAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTUREAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUREAActionPerformed

    private void TXTUREAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTUREAKeyTyped
           char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTUREA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTUREAKeyTyped

    private void TXTGLICEMIAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTGLICEMIAKeyTyped
       char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTGLICEMIA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTGLICEMIAKeyTyped

    private void TXTLDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTLDLKeyTyped
                   char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTLDL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTLDLKeyTyped

    private void TXTFOSFATAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTFOSFATAKeyTyped
                            char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTFOSFATA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTFOSFATAKeyTyped

    private void TXTRELACIONKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTRELACIONKeyTyped
                 char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTRELACION.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTRELACIONKeyTyped

    private void TXTGLOBULINASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTGLOBULINASActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTGLOBULINASActionPerformed

    private void TXTGLOBULINASKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTGLOBULINASKeyTyped
             char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTGLOBULINAS.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTGLOBULINASKeyTyped

    private void TXTALBUMINAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTALBUMINAKeyTyped
           char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTALBUMINA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTALBUMINAKeyTyped

    private void TXTPROTEINASKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPROTEINASKeyTyped
      char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTPROTEINAS.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTPROTEINASKeyTyped

    private void TXTBILIINDIRECTAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILIINDIRECTAKeyTyped
            char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTBILIINDIRECTA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTBILIINDIRECTAKeyTyped

    private void TXTBILIDIRECTAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILIDIRECTAKeyTyped
                  char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTBILIDIRECTA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTBILIDIRECTAKeyTyped

    private void TXTBILITOTALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTBILITOTALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILITOTALActionPerformed

    private void TXTBILITOTALKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILITOTALKeyTyped
                  char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTBILITOTAL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTBILITOTALKeyTyped

    private void TXTVLDLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTVLDLKeyTyped
                      char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTVLDL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTVLDLKeyTyped

    private void TXTTGOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTTGOKeyTyped
                    char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTTGO.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTTGOKeyTyped

    private void TXTTGPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTTGPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTTGPActionPerformed

    private void TXTTGPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTTGPKeyTyped
                         char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTTGP.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTTGPKeyTyped

    private void TxtNeutrofilos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNeutrofilos1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtNeutrofilos1ActionPerformed

    private void TXTCALCIO1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCALCIO1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTCALCIO1KeyTyped

    private void TXTHDL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTHDL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTHDL1ActionPerformed

    private void TXTHDL1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTHDL1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTHDL1KeyTyped

    private void TXTRIGLICERIDOS1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTRIGLICERIDOS1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTRIGLICERIDOS1KeyTyped

    private void TXTCOLESTEROL1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCOLESTEROL1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTCOLESTEROL1KeyTyped

    private void TXTACIDOURICO1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTACIDOURICO1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTACIDOURICO1KeyTyped

    private void TXTCREATININA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTCREATININA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTCREATININA1KeyTyped

    private void TXTUREA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTUREA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUREA1ActionPerformed

    private void TXTUREA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTUREA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUREA1KeyTyped

    private void TXTGLICEMIA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTGLICEMIA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTGLICEMIA1KeyTyped

    private void TXTLDL1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTLDL1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTLDL1KeyTyped

    private void TXTFOSFATA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTFOSFATA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTFOSFATA1KeyTyped

    private void TXTRELACION1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTRELACION1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTRELACION1KeyTyped

    private void TXTGLOBULINAS1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTGLOBULINAS1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTGLOBULINAS1ActionPerformed

    private void TXTGLOBULINAS1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTGLOBULINAS1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTGLOBULINAS1KeyTyped

    private void TXTALBUMINA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTALBUMINA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTALBUMINA1KeyTyped

    private void TXTPROTEINAS1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPROTEINAS1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPROTEINAS1KeyTyped

    private void TXTBILIINDIRECTA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILIINDIRECTA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILIINDIRECTA1KeyTyped

    private void TXTBILIDIRECTA1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILIDIRECTA1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILIDIRECTA1KeyTyped

    private void TXTBILITOTAL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTBILITOTAL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILITOTAL1ActionPerformed

    private void TXTBILITOTAL1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTBILITOTAL1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILITOTAL1KeyTyped

    private void TXTVLDL1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTVLDL1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTVLDL1KeyTyped

    private void TXTTGO1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTTGO1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTTGO1KeyTyped

    private void TXTTGP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTTGP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTTGP1ActionPerformed

    private void TXTTGP1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTTGP1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTTGP1KeyTyped

    private void JCglucosa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCglucosa1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCglucosa1ActionPerformed

    private void JCnitridosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCnitridosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCnitridosActionPerformed

    private void TxtOlor1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtOlor1KeyTyped
        va.longitud(TxtOlor1 .getText(), 30, evt);
    }//GEN-LAST:event_TxtOlor1KeyTyped

    private void TxtDensidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtDensidadKeyTyped
        va.longitud(TxtDensidad .getText(), 80, evt);
    }//GEN-LAST:event_TxtDensidadKeyTyped

    private void JCaspectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCaspectoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCaspectoActionPerformed

    private void TxtLeucositosOrinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtLeucositosOrinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtLeucositosOrinaActionPerformed

    private void TxtLeucositosOrinaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtLeucositosOrinaKeyTyped
         char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtLeucositosOrina.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtLeucositosOrinaKeyTyped

    private void JCAspectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCAspectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCAspectActionPerformed

    private void JradioreferenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JradioreferenciasActionPerformed
      jTabbedPane2.setSelectedIndex(2);
    this.Jradioreferencias.setSelected(true);
    JradioUroanalisis.setSelected(false);
    JradioPerfil.setSelected(false);
    JradioPtt.setSelected(false);
     
    }//GEN-LAST:event_JradioreferenciasActionPerformed

    private void JradioPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JradioPerfilActionPerformed
        jTabbedPane2.setSelectedIndex(0);
        
        this.JradioPerfil.setSelected(true);
        JradioUroanalisis.setSelected(false);
        Jradioreferencias.setSelected(false);
        JradioPtt.setSelected(false);
    }//GEN-LAST:event_JradioPerfilActionPerformed

    private void JradioUroanalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JradioUroanalisisActionPerformed
     jTabbedPane2.setSelectedIndex(1);
     this.JradioUroanalisis.setSelected(true);
     JradioPerfil.setSelected(false);
     Jradioreferencias.setSelected(false);
     JradioPtt.setSelected(false);
    }//GEN-LAST:event_JradioUroanalisisActionPerformed

    private void TxtPlaquetasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtPlaquetasKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car=='-' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtPlaquetas.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==7)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=',' && car!='-'|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtPlaquetasKeyTyped

    private void TXtCHCMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXtCHCMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXtCHCMActionPerformed

    private void TXtCHCMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXtCHCMKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXtCHCM.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXtCHCMKeyTyped

    private void TxtVCMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtVCMKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtVCM.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtVCMKeyTyped

    private void TxtHematocritoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtHematocritoKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtHematocrito.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtHematocritoKeyTyped

    private void TxtHemoglobinaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtHemoglobinaKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtHemoglobina.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtHemoglobinaKeyTyped

    private void TxtNeutrofilosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNeutrofilosKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtNeutrofilos.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==3)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtNeutrofilosKeyTyped

    private void TxtLinfocitosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtLinfocitosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtLinfocitosActionPerformed

    private void TxtLinfocitosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtLinfocitosKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtLinfocitos.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==2)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtLinfocitosKeyTyped

    private void TxtLeucocitosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtLeucocitosKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TxtLeucocitos.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==5)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TxtLeucocitosKeyTyped

    private void TXTBILIDIRECTA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTBILIDIRECTA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTBILIDIRECTA1ActionPerformed

    private void TXTPtelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTPtelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPtelefonoActionPerformed

    private void TXTVDRLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTVDRLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTVDRLActionPerformed

    private void TXTVDRLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTVDRLKeyTyped
             va.longitud(TXTVDRL.getText(), 20, evt);
    }//GEN-LAST:event_TXTVDRLKeyTyped

    private void TxtHematiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtHematiesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtHematiesActionPerformed

    private void TxtHematiesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtHematiesKeyTyped
        va.longitud(TxtHematies.getText(), 10, evt);
    }//GEN-LAST:event_TxtHematiesKeyTyped

    private void TxtCelulasredondasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtCelulasredondasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtCelulasredondasActionPerformed

    private void TxtCelulasredondasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCelulasredondasKeyTyped
        va.longitud(TxtFilamentos.getText(), 10, evt);
    }//GEN-LAST:event_TxtCelulasredondasKeyTyped

    private void TxtFilamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtFilamentosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtFilamentosActionPerformed

    private void TxtFilamentosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtFilamentosKeyTyped
        va.longitud(TxtCelulasredondas.getText(), 10, evt);
    }//GEN-LAST:event_TxtFilamentosKeyTyped

    private void TXTGLICEMIA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTGLICEMIA1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTGLICEMIA1ActionPerformed

    private void TXTVLDL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTVLDL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTVLDL1ActionPerformed

    private void JtextMicroscopioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JtextMicroscopioKeyTyped
               va.longitud(JtextMicroscopio .getText(), 80, evt);
    }//GEN-LAST:event_JtextMicroscopioKeyTyped

    private void JRMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRMasculinoActionPerformed
      JRMasculino.setSelected(true);
      JRfemenino.setSelected(false);
      Sexo="Masculino";
    }//GEN-LAST:event_JRMasculinoActionPerformed

    private void JRfemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JRfemeninoActionPerformed
      JRfemenino.setSelected(true);
      JRMasculino.setSelected(false);
      Sexo="Femenino";
    }//GEN-LAST:event_JRfemeninoActionPerformed

    private void TXTPROTROMBINAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPROTROMBINAKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTPROTROMBINA.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==5)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTPROTROMBINAKeyTyped

    private void TXTPARCIALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTPARCIALActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTPARCIALActionPerformed

    private void TXTPARCIALKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTPARCIALKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTPARCIAL.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==5)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTPARCIALKeyTyped

    private void TXTVSGKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTVSGKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTVSG.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==5)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=','|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTVSGKeyTyped

    private void TXTRPCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTRPCKeyTyped
        va.longitud(TXTRPC.getText(), 10, evt);
    }//GEN-LAST:event_TXTRPCKeyTyped

    private void TXTDPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTDPCActionPerformed

    }//GEN-LAST:event_TXTDPCActionPerformed

    private void TXTDPCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTDPCKeyTyped
        va.longitud(TXTDPC.getText(), 10, evt);
    }//GEN-LAST:event_TXTDPCKeyTyped

    private void TXTVRHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTVRHKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car=='-' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTVRH.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=',' && car!='-'|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTVRHKeyTyped

    private void TXTMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTMKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car=='-' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTM.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=',' && car!='-'|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTMKeyTyped

    private void TXTKIDSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTKIDSKeyTyped
        char car = evt.getKeyChar();
        //VERIFICA Y LIMITA COMPOSICION DE LOS DATOS
        if((car=='.' || car=='-' || car==',' || car>='0' && car<='9' || car==(char)KeyEvent.VK_DELETE))
        {
            String Caracteres = TXTKIDS.getText();
            //CONTABILIZA LOS CARACTERES
            if(Caracteres.length()==10)
            {
                evt.consume();
            }
        }
        //EVITA EL INGRESO DE OTROS CARACTERES
        else if((car!='.' && car!=',' && car!='-'|| car<'0' || car>'9' || car!=(char)KeyEvent.VK_DELETE))
        {
            evt.consume();
        }
    }//GEN-LAST:event_TXTKIDSKeyTyped

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed

        if (JOptionPane.showConfirmDialog(rootPane, "¿Está seguro que desea actualizar los valores referenciales?",
            "Valores Referenciales", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)  {
      AuditoriaModificar();   ActualizarReferenciaPPT(); CallReferencia(); }

        else{CallReferencia();}
    }//GEN-LAST:event_jButton23ActionPerformed

    private void TXTUNIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTUNIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUNIDActionPerformed

    private void TXTUNIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTUNIDKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUNIDKeyTyped

    private void TXTUNID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TXTUNID2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUNID2ActionPerformed

    private void TXTUNID2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TXTUNID2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TXTUNID2KeyTyped

    private void JradioPttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JradioPttActionPerformed
     jTabbedPane2.setSelectedIndex(3);
     this.JradioPtt.setSelected(true);
     JradioUroanalisis.setSelected(false);
     JradioPerfil.setSelected(false);
     Jradioreferencias.setSelected(false);
    
    }//GEN-LAST:event_JradioPttActionPerformed

    private void JCheckpptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCheckpptActionPerformed
              if (JCheckppt.isSelected()==true)  { JradioPtt.setEnabled(true);   } 
              else  if (JCheckppt.isSelected()==false)  { JradioPtt.setEnabled(false);   } 
    }//GEN-LAST:event_JCheckpptActionPerformed

    
    
    
    public static String getEdad(Date fechaNacimiento) {
    if (fechaNacimiento != null) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        StringBuilder result = new StringBuilder();
        if (fechaNacimiento != null) {
            result.append(sdf.format(fechaNacimiento));
            result.append(" (");
            Calendar c = new GregorianCalendar();
            c.setTime(fechaNacimiento);
            result.append(calcularEdad(c));
            result.append(" años)");
        }
        return result.toString();
    }
    return "";
}

private static int calcularEdad(Calendar fechaNac) {
    Calendar today = Calendar.getInstance();
    int diffYear = today.get(Calendar.YEAR) - fechaNac.get(Calendar.YEAR);
    int diffMonth = today.get(Calendar.MONTH) - fechaNac.get(Calendar.MONTH);
    int diffDay = today.get(Calendar.DAY_OF_MONTH) - fechaNac.get(Calendar.DAY_OF_MONTH);
    // Si está en ese año pero todavía no los ha cumplido
    if (diffMonth < 0 || (diffMonth == 0 && diffDay < 0)) {
        diffYear = diffYear - 1;
    }
    return diffYear;
}
    
    
    
    
    
     public void pdf() {
      try {
               
        /*-------------------------------------------------------------------------------------*/
            
            String fechaN = new SimpleDateFormat("yyyy/MM/dd").format(FechaNacimiento.getDate());
            String [] dateParts1= fechaN.split("/");
            String an1 = dateParts1[0];
            String mes1 = dateParts1[1];
            String dia1 = dateParts1[2];
            
            
            String an_actual = Validar.fecha_actual();
            String mes_actual = Validar.fecha_mes();
            String dia_actual = Validar.fecha_dia();
            

            int diferenciadia=Integer.parseInt(dia_actual)- Integer.parseInt(dia1);
            int diferenciames=Integer.parseInt(mes_actual)- Integer.parseInt(mes1);
            int diferencian=Integer.parseInt(an_actual)- Integer.parseInt(an1);;
        

   if (diferenciames < 0 || (diferenciames == 0 && diferenciadia < 0)) {
        diferencian = diferencian - 1;
    }
 
   
          
          
          
          
         DateTimeFormatter fth = DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).ofPattern("dd-MM-yyyy--HH-mm");
         LocalDateTime fechaactual = LocalDateTime.now().truncatedTo(ChronoUnit.MINUTES);
          

         
            PdfNames=TXTPcedula.getText()+"_"+Maxid;

    
        
          
          
            BaseFont BF = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);    
            Font Letra = new Font(BF); 
            Paragraph saltolinea = new Paragraph();
          

            FileOutputStream archivo;
            //String rut = System.getProperty("user.home");
            File file = new File("C://Fundaginebra//Reportes//"+PdfNames+".pdf");
            archivo = new FileOutputStream(file);
            Document doc = new Document();
            PdfWriter writer=  PdfWriter.getInstance(doc, archivo);
            doc.open();
       
            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("C:\\Fundaginebra\\src\\imagenes\\Fundacionlogo1.png");
            header.setAlignment(Chunk.ALIGN_CENTER);

         
            

            
            
            PdfPTable Encabezado = new PdfPTable(1);
            Encabezado.setWidthPercentage(25);
            Encabezado.getDefaultCell().setBorder(0);
            float[] ColumnaEncabezado = new float[]{50f};
            Encabezado.setWidths(ColumnaEncabezado);
            Encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);
           // String razon =  "Fundación Convenio de Ginbra I";
           // String riff =   "J-8188418-8";
           // String tlf =    "0000-000000";
           // String dir =    "Centro";
            Encabezado.addCell(header);
        
          
            
            
            
            

          
            
      
       //BODY 
       
       
       
            PdfPTable Tabla = new PdfPTable(3); 
            Tabla.setWidthPercentage(100);  
            float[] medidaCeldas = {1f, 3f, 1f };
            Tabla.setWidths(medidaCeldas);
            Tabla.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph tcolumna1 = new Paragraph("N° DE ORDEN: "+Maxid+" ");
            tcolumna1.getFont().setStyle(Font.BOLD);
            tcolumna1.getFont().setSize(8);        
            tcolumna1.setFont(Letra);
            tcolumna1.setAlignment(Element.ALIGN_CENTER);
            Tabla.addCell(tcolumna1);
     
                
            Paragraph tcolumna2 = new Paragraph("RESULTADOS DEL ANALISIS");
            tcolumna2.getFont().setStyle(Font.BOLD);
            tcolumna2.getFont().setSize(12);        
            tcolumna2.setFont(Letra);
            tcolumna2.setAlignment(Element.ALIGN_CENTER);
            Tabla.addCell(tcolumna2);

            Paragraph tcolumna3 = new Paragraph("N° DE PACIENTE: " +IdPaciente+" ");
            tcolumna3.getFont().setStyle(Font.BOLD);
            tcolumna3.getFont().setSize(8);        
            tcolumna3.setFont(Letra);
            tcolumna3.setAlignment(Element.ALIGN_CENTER);
            Tabla.addCell(tcolumna3);
        

              
              
            PdfPTable Tabla0 = new PdfPTable(4); 
            // Tabla0.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla0.setWidthPercentage(100);  
            float[] medidaCeldas0 = {3f, 2f, 1f,2f};
            Tabla0.setWidths(medidaCeldas0);
            Tabla0.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla0.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t0columna1 = new Paragraph("PACIENTE");
            t0columna1.getFont().setStyle(Font.BOLD);
            t0columna1.getFont().setSize(8);        
            t0columna1.setFont(Letra);
            t0columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla0.addCell(t0columna1);
     
                
            Paragraph t0columna2 = new Paragraph("CÉDULA");
            t0columna2.getFont().setStyle(Font.BOLD);
            t0columna2.getFont().setSize(8);        
            t0columna2.setFont(Letra);
            t0columna2.setAlignment(Element.ALIGN_LEFT);
            Tabla0.addCell(t0columna2);

            Paragraph t0columna3 = new Paragraph("EDAD");
            t0columna3.getFont().setStyle(Font.BOLD);
            t0columna3.getFont().setSize(8);        
            t0columna3.setFont(Letra);
            t0columna3.setAlignment(Element.ALIGN_LEFT);
            Tabla0.addCell(t0columna3);
        
            Paragraph t0columna4 = new Paragraph("SEXO");
            t0columna4.getFont().setStyle(Font.BOLD);
            t0columna4.getFont().setSize(8);        
            t0columna4.setFont(Letra);
            t0columna4.setAlignment(Element.ALIGN_LEFT);
            Tabla0.addCell(t0columna4);
        
             String Paciente=TXTPnombre.getText()+ " "+ TXTPapellido.getText();
            
            Tabla0.addCell(new Paragraph(Paciente,FontFactory.getFont("Arial",8,Font.NORMAL))); 
            Tabla0.addCell(new Paragraph(TXTPcedula.getText(),FontFactory.getFont("Arial",8,Font.NORMAL))); 
            Tabla0.addCell(new Paragraph(Integer.toString(diferencian),FontFactory.getFont("Arial",8,Font.NORMAL))); 
            Tabla0.addCell(new Paragraph(Sexo,FontFactory.getFont("Arial",8,Font.NORMAL))); 

           // Tabla0.addCell("Juan Calderón") ;  
           // Tabla0.addCell("V-27434836"); 
           // Tabla0.addCell("18"+" años"); 
           // Tabla0.addCell("Masculino");
            
            
            
            
            
                 
            PdfPTable Tabla1 = new PdfPTable(1); 
            Tabla1.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla1.setWidthPercentage(100);  
            float[] medidaCeldas1 = {5f};
            Tabla1.setWidths(medidaCeldas1);
            Tabla1.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla1.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t1columna1 = new Paragraph("----- HEMATOLOGÍA ---- ");
            t1columna1.getFont().setStyle(Font.BOLD);
            t1columna1.getFont().setSize(10);        
            t1columna1.setFont(Letra);
            t1columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla1.addCell(t1columna1);
     
                

            
            
            
            PdfPTable Tabla2 = new PdfPTable(4); 
            Tabla2.setWidthPercentage(100);  
            Tabla2.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            float[] medidaCeldas2 = {4f, 2f, 2f,4f};
            Tabla2.setWidths(medidaCeldas2);
            Tabla2.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla2.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t2columna1 = new Paragraph("ANALISIS REALIZADO");
            t2columna1.getFont().setStyle(Font.BOLD);
            t2columna1.getFont().setSize(9);        
            t2columna1.setFont(Letra);
            t2columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla2.addCell(t2columna1);
     
                
            Paragraph t2columna2 = new Paragraph("RESULTADOS");
            t2columna2.getFont().setStyle(Font.BOLD);
            t2columna2.getFont().setSize(9);        
            t2columna2.setFont(Letra);
            t2columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla2.addCell(t2columna2);

            Paragraph t2columna3 = new Paragraph("UNIDAD");
            t2columna3.getFont().setStyle(Font.BOLD);
            t2columna3.getFont().setSize(10);        
            t2columna3.setFont(Letra);
            t2columna3.setAlignment(Element.ALIGN_CENTER);
            Tabla2.addCell(t2columna3);

            Paragraph t2columna4 = new Paragraph("REFERENCIA");
            t2columna4.getFont().setStyle(Font.BOLD);
            t2columna4.getFont().setSize(9);        
            t2columna4.setFont(Letra);
            t2columna4.setAlignment(Element.ALIGN_CENTER);
            Tabla2.addCell(t2columna4);
            
            
            
         
           
            
            
           Tabla2.addCell(new Paragraph("Leucocitos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtLeucocitos.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("mm3",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtLeucocitos1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla2.addCell(new Paragraph("Linfocitos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtLinfocitos.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("%",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtLinfocitos1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));  
            
           Tabla2.addCell(new Paragraph("Neutrofilos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtNeutrofilos.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("mill/mm3",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtNeutrofilos1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
                    
           
           
           Tabla2.addCell(new Paragraph("Hemoglobina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtHemoglobina.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("g/dL",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtHemoglobina1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
                    
                 
           Tabla2.addCell(new Paragraph("Hematocritos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtHematocrito.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("%",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtHematocrito1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
                    
        
           Tabla2.addCell(new Paragraph("VCM",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtVCM.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("fL",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtVCM1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
                    
            
           Tabla2.addCell(new Paragraph("CHCM",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TXtCHCM.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("g/dL",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TXtCHCM1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla2.addCell(new Paragraph("Cont. Plaquetas",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtPlaquetas.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla2.addCell(new Paragraph("mm3",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla2.addCell(new Paragraph(TxtPlaquetas1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            


           
           
            PdfPTable Tabla3 = new PdfPTable(1); 
            Tabla3.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla3.setWidthPercentage(100);  
     
            Tabla3.setWidths(medidaCeldas1);
            Tabla3.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla3.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t3columna1 = new Paragraph("----- SEROLOGÍA ---- ");
            t3columna1.getFont().setStyle(Font.BOLD);
            t3columna1.getFont().setSize(10);        
            t3columna1.setFont(Letra);
            t3columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla3.addCell(t3columna1);
           
           
            PdfPTable Tabla4 = new PdfPTable(2); 
            Tabla4.setWidthPercentage(100);  
            Tabla4.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            float[] medidaCeldas4 = {4f, 4f};
            Tabla4.setWidths(medidaCeldas4);
            Tabla4.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla4.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t4columna1 = new Paragraph("PRUEBA");
            t4columna1.getFont().setStyle(Font.BOLD);
            t4columna1.getFont().setSize(9);        
            t4columna1.setFont(Letra);
            t4columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla4.addCell(t4columna1);
     
                
            Paragraph t4columna2 = new Paragraph("RESULTADO");
            t4columna2.getFont().setStyle(Font.BOLD);
            t4columna2.getFont().setSize(9);        
            t4columna2.setFont(Letra);
            t4columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla4.addCell(t4columna2);

        
            
                   
                
           Tabla4.addCell(new Paragraph("V.I.H",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla4.addCell(new Paragraph(TXTHLV.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
 
                    
                
           Tabla4.addCell(new Paragraph("V.D.R.L",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla4.addCell(new Paragraph(TXTVDRL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));

                    
     
            
                   
            PdfPTable Tabla5 = new PdfPTable(1); 
            Tabla5.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla5.setWidthPercentage(100);  
            Tabla5.setWidths(medidaCeldas1);
            Tabla5.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla5.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t5columna1 = new Paragraph("----- QUIMICA SANGUINEA ---- ");
            t5columna1.getFont().setStyle(Font.BOLD);
            t5columna1.getFont().setSize(10);        
            t5columna1.setFont(Letra);
            t5columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla5.addCell(t5columna1);
     
                

            
            
            
            PdfPTable Tabla6 = new PdfPTable(4); 
            Tabla6.setWidthPercentage(100);  
            Tabla6.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tabla6.setWidths(medidaCeldas2);
            Tabla6.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla6.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t6columna1 = new Paragraph("ANALISIS REALIZADO");
            t6columna1.getFont().setStyle(Font.BOLD);
            t6columna1.getFont().setSize(9);        
            t6columna1.setFont(Letra);
            t6columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla6.addCell(t6columna1);
     
                
            Paragraph t6columna2 = new Paragraph("RESULTADOS");
            t6columna2.getFont().setStyle(Font.BOLD);
            t6columna2.getFont().setSize(9);        
            t6columna2.setFont(Letra);
            t6columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla6.addCell(t6columna2);

            Paragraph t6columna3 = new Paragraph("UNIDAD");
            t6columna3.getFont().setStyle(Font.BOLD);
            t6columna3.getFont().setSize(10);        
            t6columna3.setFont(Letra);
            t6columna3.setAlignment(Element.ALIGN_CENTER);
            Tabla6.addCell(t6columna3);

            Paragraph t6columna4 = new Paragraph("REFERENCIA");
            t6columna4.getFont().setStyle(Font.BOLD);
            t6columna4.getFont().setSize(9);        
            t6columna4.setFont(Letra);
            t6columna4.setAlignment(Element.ALIGN_CENTER);
            Tabla6.addCell(t6columna4);
            
            
            
         
           
            
            
           Tabla6.addCell(new Paragraph("Glicemia",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTGLICEMIA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTGLICEMIA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Urea",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTUREA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTUREA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Creatinina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCREATININA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCREATININA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Ácido Urico",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTACIDOURICO.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTACIDOURICO1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Colesterol",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCOLESTEROL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCOLESTEROL1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Trigliceridos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTRIGLICERIDOS.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTRIGLICERIDOS1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("H.D.L colesterol",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTHDL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTHDL1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("L.D.L colesterol",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTLDL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTLDL1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("V.L.D.L colesterol",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTVLDL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTVLDL1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Bilirrubina Total",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILITOTAL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILITOTAL1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Bilirrubina Directa",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILIDIRECTA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILIDIRECTA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Bilirrubina Indirecta",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILIINDIRECTA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTBILIINDIRECTA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Proteinas Totales",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTPROTEINAS.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("gr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTPROTEINAS1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Albumina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTALBUMINA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("gr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTALBUMINA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Globulinas",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTGLOBULINAS.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("gr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTGLOBULINAS1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Relación ALB/GLOB",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTRELACION.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph(" ",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTRELACION1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("T.G.O",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTTGO.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("U.I/ml",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTTGO1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("T.G.P",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTTGP.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("U.I/ml",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTTGP1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Fosfatasa Alcalina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTFOSFATA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("U.I/L",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTFOSFATA1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           Tabla6.addCell(new Paragraph("Calcio",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCALCIO.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla6.addCell(new Paragraph("mgr/dl",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla6.addCell(new Paragraph(TXTCALCIO1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
            
            
            
            
            
            
            
            
            
            
            
            /*ORINA Y HECES*/
   
            PdfPTable Tablatitle = new PdfPTable(2); 
            
            Tablatitle.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            
            Tablatitle.setWidthPercentage(100);  
            Tablatitle.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tablatitle.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph txcolumna1 = new Paragraph("ANÁLISIS REALIZADO");
            txcolumna1.getFont().setStyle(Font.BOLD);
            txcolumna1.getFont().setSize(9);        
            txcolumna1.setFont(Letra);
            txcolumna1.setAlignment(Element.ALIGN_CENTER);
            Tablatitle.addCell(txcolumna1);
     
                
            Paragraph txcolumna2 = new Paragraph("RESULTADOS");
            txcolumna2.getFont().setStyle(Font.BOLD);
            txcolumna2.getFont().setSize(9);        
            txcolumna2.setFont(Letra);
            txcolumna2.setAlignment(Element.ALIGN_CENTER);
            Tablatitle.addCell(txcolumna2);
            
            
         
            
          
           
           
           
           
            PdfPTable Tabla7 = new PdfPTable(1); 
            Tabla7.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla7.setWidthPercentage(100);  
            float[] medidaCeldas7 = {5f};
            Tabla7.setWidths(medidaCeldas7);
            Tabla7.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla7.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
           
            
            
            
            Paragraph t7columna1 = new Paragraph("-----ANALISIS DE ORINA-----");
            t7columna1.getFont().setStyle(Font.BOLD);
            t7columna1.getFont().setSize(9);        
            t7columna1.setFont(Letra);
            t7columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla7.addCell(t7columna1);
     

            
            
            PdfPTable Tabla8 = new PdfPTable(2); 
            Tabla8.setWidthPercentage(100);  
            Tabla8.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            float[] medidaCeldas8 = {4f, 4f};
            Tabla8.setWidths(medidaCeldas8);
            Tabla8.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla8.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t8columna1 = new Paragraph("");
            t8columna1.getFont().setStyle(Font.BOLD);
            t8columna1.getFont().setSize(9);        
            t8columna1.setFont(Letra);
            t8columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla8.addCell(t8columna1);
     
                
            Paragraph t8columna2 = new Paragraph();
            t8columna2.getFont().setStyle(Font.BOLD);
            t8columna2.getFont().setSize(9);        
            t8columna2.setFont(Letra);
            t8columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla8.addCell(t8columna2);

        
            
            
       
                
           Tabla8.addCell(new Paragraph("Color",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla8.addCell(new Paragraph(JCcolor1.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
 
                    
                
           Tabla8.addCell(new Paragraph("Olor",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla8.addCell(new Paragraph(TxtOlor1.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));

                    
                 
           Tabla8.addCell(new Paragraph("Densidad",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla8.addCell(new Paragraph(TxtDensidad.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));

        
           Tabla8.addCell(new Paragraph("Aspecto",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla8.addCell(new Paragraph(JCaspecto.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
    
                    
           Tabla8.addCell(new Paragraph("PH",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla8.addCell(new Paragraph(JCph.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
         
           
          
              
           PdfPTable Tabla9 = new PdfPTable(1); 
           Tabla9.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
           // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
           Tabla9.setWidthPercentage(100);  
           Tabla9.setWidths(medidaCeldas1);
           Tabla9.setHorizontalAlignment(Element.ALIGN_CENTER);
           Tabla9.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);

           Paragraph t9columna1 = new Paragraph("ANÁLISIS QUIMICO");
           t9columna1.getFont().setStyle(Font.BOLD);
           t9columna1.getFont().setSize(9);        
           t9columna1.setFont(Letra);
           t9columna1.setAlignment(Element.ALIGN_LEFT);
           Tabla9.addCell(t9columna1);
           
           
           
           
       
            
            PdfPTable Tabla10 = new PdfPTable(2); 
            Tabla10.setWidthPercentage(100);  
            Tabla10.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tabla10.setWidths(medidaCeldas8);
            Tabla10.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla10.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t10columna1 = new Paragraph();
            t10columna1.getFont().setStyle(Font.BOLD);
            t10columna1.getFont().setSize(9);        
            t10columna1.setFont(Letra);
            t10columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla10.addCell(t10columna1);
     
                
            Paragraph t10columna2 = new Paragraph();
            t10columna2.getFont().setStyle(Font.BOLD);
            t10columna2.getFont().setSize(9);        
            t10columna2.setFont(Letra);
            t10columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla10.addCell(t10columna2);

        
        
       
                
           Tabla10.addCell(new Paragraph("Glucosa",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCglucosa1.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
 
                    
                
           Tabla10.addCell(new Paragraph("Proteinas",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCproteinas.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

                    
                 
           Tabla10.addCell(new Paragraph("Hemoglobina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JChemoglobina.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

        
           Tabla10.addCell(new Paragraph("Nitritos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCnitridos.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
       
            
           Tabla10.addCell(new Paragraph("Cuerpos Cetonicos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCcuerposCe.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
    
                    
           Tabla10.addCell(new Paragraph("Urobilinogeno",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCph.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
         
           Tabla10.addCell(new Paragraph("Pigmentos Biliares",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCph.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
         
            
           Tabla10.addCell(new Paragraph("Bilirrubina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla10.addCell(new Paragraph(JCph.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
            
           
            
            
            
           PdfPTable Tabla11 = new PdfPTable(1); 
           Tabla11.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
           // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
           Tabla11.setWidthPercentage(100);  
           Tabla11.setWidths(medidaCeldas1);
           Tabla11.setHorizontalAlignment(Element.ALIGN_CENTER);
           Tabla11.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);

           Paragraph t11columna1 = new Paragraph("ANÁLISIS MICROSCÓPICO");
           t11columna1.getFont().setStyle(Font.BOLD);
           t11columna1.getFont().setSize(9);        
           t11columna1.setFont(Letra);
           t11columna1.setAlignment(Element.ALIGN_LEFT);
           Tabla11.addCell(t11columna1);
           
           
           
            PdfPTable Tabla12 = new PdfPTable(2); 
            Tabla12.setWidthPercentage(100);  
            Tabla12.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tabla12.setWidths(medidaCeldas8);
            Tabla12.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla12.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t12columna1 = new Paragraph("");
            t12columna1.getFont().setStyle(Font.BOLD);
            t12columna1.getFont().setSize(9);        
            t12columna1.setFont(Letra);
            t12columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla12.addCell(t12columna1);
     
                
            Paragraph t12columna2 = new Paragraph("");
            t12columna2.getFont().setStyle(Font.BOLD);
            t12columna2.getFont().setSize(9);        
            t12columna2.setFont(Letra);
            t12columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla12.addCell(t12columna2);

        
        
       
                
           Tabla12.addCell(new Paragraph("Bacterias",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(JCbacterias.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
 
                    
                
           Tabla12.addCell(new Paragraph("Celulas Epiteliales",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(JCEP.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
                 
           Tabla12.addCell(new Paragraph("Leucocitos",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(TxtLeucositosOrina.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));

           Tabla12.addCell(new Paragraph("Hematies",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(TxtHematies.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
          
           Tabla12.addCell(new Paragraph("Células Redondas",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(TxtCelulasredondas.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           
           Tabla12.addCell(new Paragraph("Filamentos de Mucina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla12.addCell(new Paragraph(TxtFilamentos.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           
                      
           
           
           
           /**      ANALISIS DE HECES        **/
            
           
            PdfPTable Tabla13 = new PdfPTable(1); 
            Tabla13.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla13.setWidthPercentage(100);  

            Tabla13.setWidths(medidaCeldas1);
            Tabla13.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla13.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
           
            
            
            
            Paragraph t13columna1 = new Paragraph("-----EXAMEN DE HECES-----");
            t13columna1.getFont().setStyle(Font.BOLD);
            t13columna1.getFont().setSize(9);        
            t13columna1.setFont(Letra);
            t13columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla13.addCell(t13columna1);
     

           
           
           
            PdfPTable Tabla14 = new PdfPTable(2); 
            Tabla14.setWidthPercentage(100);  
            Tabla14.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tabla14.setWidths(medidaCeldas8);
            Tabla14.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla14.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t14columna1 = new Paragraph();
            t14columna1.getFont().setStyle(Font.BOLD);
            t14columna1.getFont().setSize(9);        
            t14columna1.setFont(Letra);
            t14columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla14.addCell(t14columna1);
     
                
            Paragraph t14columna2 = new Paragraph();
            t14columna2.getFont().setStyle(Font.BOLD);
            t14columna2.getFont().setSize(9);        
            t14columna2.setFont(Letra);
            t14columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla14.addCell(t14columna2);

        
        
       
                
           Tabla14.addCell(new Paragraph("Color",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCcolor4.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
 
                
           Tabla14.addCell(new Paragraph("Aspecto",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCAspect.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
                 
           Tabla14.addCell(new Paragraph("Consistencia",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCconsistencia.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

           Tabla14.addCell(new Paragraph("Reacción",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCrestos.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

           Tabla14.addCell(new Paragraph("Moco",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCmoco.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

           Tabla14.addCell(new Paragraph("Sangre",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCrestos.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           
           Tabla14.addCell(new Paragraph("Restos Alimenticios",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JCAspect.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));

           Tabla14.addCell(new Paragraph("Olor",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla14.addCell(new Paragraph(JColor.getSelectedItem().toString(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           
           
           
            PdfPTable Tabla15 = new PdfPTable(1); 
            Tabla15.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla15.setWidthPercentage(100);  
            Tabla15.setWidths(medidaCeldas1);
            Tabla15.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla15.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
           
            
            
            
            Paragraph t15columna1 = new Paragraph("EXAMEN MICROSCOPICO \n ");
            t15columna1.getFont().setStyle(Font.BOLD);
            t15columna1.getFont().setSize(9);        
            t15columna1.setFont(Letra);
            t15columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla15.addCell(t15columna1);
            Tabla15.addCell(new Paragraph(JtextMicroscopio.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));           
           
           
           
           /**********-------------PTT------------*****************/
           
           
                    
            PdfPTable Tabla16 = new PdfPTable(1); 
            Tabla16.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            // Tabla0.SetBorderBottomLeftRadius(new BorderRadius(4f)); // No border is drawn
            Tabla16.setWidthPercentage(100);  
            Tabla16.setWidths(medidaCeldas1);
            Tabla16.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla16.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t16columna1 = new Paragraph("----- TIEMPOS DE COAGULACIÓN Y VELOCIDAD DE SEDIMENTACIÓN ---- ");
            t16columna1.getFont().setStyle(Font.BOLD);
            t16columna1.getFont().setSize(10);        
            t16columna1.setFont(Letra);
            t16columna1.setAlignment(Element.ALIGN_LEFT);
            Tabla16.addCell(t16columna1);
     
                

            
            
            
            PdfPTable Tabla17 = new PdfPTable(4); 
            Tabla17.setWidthPercentage(100);  
            Tabla17.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tabla17.setWidths(medidaCeldas2);
            Tabla17.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tabla17.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph t17columna1 = new Paragraph("ANALISIS REALIZADO");
            t17columna1.getFont().setStyle(Font.BOLD);
            t17columna1.getFont().setSize(9);        
            t17columna1.setFont(Letra);
            t17columna1.setAlignment(Element.ALIGN_CENTER);
            Tabla17.addCell(t17columna1);
     
                
            Paragraph t17columna2 = new Paragraph("RESULTADOS");
            t17columna2.getFont().setStyle(Font.BOLD);
            t17columna2.getFont().setSize(9);        
            t17columna2.setFont(Letra);
            t17columna2.setAlignment(Element.ALIGN_CENTER);
            Tabla17.addCell(t17columna2);

            Paragraph t17columna3 = new Paragraph("UNIDAD");
            t17columna3.getFont().setStyle(Font.BOLD);
            t17columna3.getFont().setSize(10);        
            t17columna3.setFont(Letra);
            t17columna3.setAlignment(Element.ALIGN_CENTER);
            Tabla17.addCell(t17columna3);

            Paragraph t17columna4 = new Paragraph("REFERENCIA");
            t17columna4.getFont().setStyle(Font.BOLD);
            t17columna4.getFont().setSize(9);        
            t17columna4.setFont(Letra);
            t17columna4.setAlignment(Element.ALIGN_CENTER);
            Tabla17.addCell(t17columna4);
            
            
            
         
           
            
            
           Tabla17.addCell(new Paragraph("Tiempo de Protrombina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph(TXTPROTROMBINA.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla17.addCell(new Paragraph("Rp/c= "+ TXTUNID.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph(TXTRPC.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
            
           
           Tabla17.addCell(new Paragraph("Tiempo Parcial de la Tromboplastina",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph(TXTPARCIAL.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla17.addCell(new Paragraph("Dp/c= "+ TXTUNID2.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph(TXTDPC.getText(),FontFactory.getFont("Arial",9,Font.NORMAL))); 
          
           
           Tabla17.addCell(new Paragraph("VSG",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph(TXTVSG.getText(),FontFactory.getFont("Arial",9,Font.NORMAL)));
           Tabla17.addCell(new Paragraph("mm",FontFactory.getFont("Arial",9,Font.NORMAL))); 
           Tabla17.addCell(new Paragraph("VR: "+TXTVRH.getText()+"\n M: "+TXTM.getText()+"\n Niños: "+ TXTKIDS.getText() ,FontFactory.getFont("Arial",9,Font.NORMAL))); 
                    
           
           
           /***********************************************************/
               
            PdfPTable Tablafirma = new PdfPTable(3); 
            Tablafirma.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tablafirma.setWidthPercentage(100);  
            float[] medidaCeldasP = {3f, 1f, 3f};
            Tablafirma.setWidths(medidaCeldasP);
            Tablafirma.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tablafirma.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
            Paragraph tPcolumna1 = new Paragraph("\n\n\n\n  www.cmollca.com");
            tPcolumna1.getFont().setStyle(Font.BOLD);
            tPcolumna1.getFont().setSize(8);        
            tPcolumna1.setFont(Letra);
            tPcolumna1.setAlignment(Element.ALIGN_CENTER);
            Tablafirma.addCell(tPcolumna1);

                
           com.itextpdf.text.Image FirmaLcdo = com.itextpdf.text.Image.getInstance("C:\\Fundaginebra\\dist\\imagen.bin");
           FirmaLcdo.setAlignment(Chunk.ALIGN_CENTER);
           Tablafirma.addCell(FirmaLcdo);

           Paragraph tPcolumna3 = new Paragraph("\n\n\n\n" + writer.getPageNumber()+ " Pág");
           tPcolumna3.getFont().setStyle(Font.BOLD);
           tPcolumna3.getFont().setSize(8);        
           tPcolumna3.setFont(Letra);
           tPcolumna3.setAlignment(Element.ALIGN_CENTER);
           Tablafirma.addCell(tPcolumna3);
           


           knowaboutlcdo(); 
           PdfPTable TablafirmaLcdo = new PdfPTable(1); 
           TablafirmaLcdo.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
           TablafirmaLcdo.setWidthPercentage(100);  
           float[] medidaCeldasFirma = {20f};
           TablafirmaLcdo.setWidths(medidaCeldasFirma);
           TablafirmaLcdo.setHorizontalAlignment(Element.ALIGN_CENTER);
           TablafirmaLcdo.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
           Paragraph tPcolumnaFirma1 = new Paragraph("________________ \n "+"Lcdo/a "+NameOfLcdo);
           tPcolumnaFirma1.getFont().setStyle(Font.BOLD);
           tPcolumnaFirma1.getFont().setSize(8);        
           tPcolumnaFirma1.setFont(Letra);
           tPcolumnaFirma1.setAlignment(Element.ALIGN_CENTER);
           TablafirmaLcdo.addCell(tPcolumnaFirma1);

           


            saltolinea.add("\n");

            /*PRIMERA PAGINA*/
            
            /*HEADER*/
            doc.add(Encabezado);
            Header(writer);
            doc.add(saltolinea); 
            doc.add(Tabla);
            doc.add(Tabla0);
            doc.add(saltolinea);
           
             /*BODY*/
            doc.add(Tabla1);
            doc.add(saltolinea);
            doc.add(Tabla2);
            doc.add(saltolinea);
            
            
            
            
                      if(JCheckppt.isSelected()==true )
             
            { 
           
            doc.add(saltolinea);
            
            doc.add(Tabla16);
            doc.add(saltolinea);
            doc.add(Tabla17);
          
            doc.add(saltolinea);
            doc.add(saltolinea);
            }
                      
            doc.add(Tabla3);
            doc.add(Tabla4);
            doc.add(saltolinea);
           
           
            /*FOOTER*/
            doc.add(saltolinea);
            addFooterConfirma(writer);
            
        
            
            
            
            
            
            
            
            
            /*SEGUNDA PAGINA*/
            
            
             /*HEADER*/
            doc.newPage();
            doc.add(Encabezado);
            Header(writer);
            doc.add(saltolinea); 
            doc.add(Tabla);
            doc.add(Tabla0);
            doc.add(saltolinea);
          
            doc.add(Tabla5);
            doc.add(saltolinea);
            doc.add(Tabla6);
              /*BODY*/
              
              
             /*FOOTER*/
            addFooterConfirma(writer);
            
            
            
            
            
            
            
            
            
          /*-------------------------- TERCERA PAGINA ----------------------------*/
                
                
             if(JcheckUro.isSelected()==true || JcheckCopro.isSelected()==true )
             
             {
             /*HEADER*/
            doc.newPage();
            doc.add(Encabezado);
            Header(writer);
            doc.add(saltolinea); 
            doc.add(Tabla);
            doc.add(Tabla0);
            doc.add(saltolinea);
             
             if(JcheckUro.isSelected()==true && JcheckCopro.isSelected()==true ){
          
                 
            doc.add(Tabla7);
            doc.add(Tablatitle);
            doc.add(Tabla8);
            doc.add(Tabla9);
            doc.add(Tabla10);
            doc.add(Tabla11);
            doc.add(Tabla12);
            
            doc.add(saltolinea);
            doc.add(Tabla13);
            doc.add(Tabla14);
            doc.add(Tabla15);
    
                            
            addFooterConfirma(writer);
             
        
        
             
             
             
             }
             
             
             else if(JcheckUro.isSelected()==true){
            doc.add(Tabla7);
            doc.add(Tablatitle);
            doc.add(Tabla8);
            doc.add(Tabla9);
            doc.add(Tabla10);
            doc.add(Tabla11);
            doc.add(Tabla12);
            doc.add(saltolinea);
            addFooterConfirma(writer);
             
        

             
             }
             
              else if(JcheckCopro.isSelected()==true){
         
       
            doc.add(Tablatitle);
            doc.add(Tabla13);
            doc.add(Tabla14);
            doc.add(Tabla15);
            doc.add(saltolinea);
            doc.add(Tablafirma);
            doc.add(TablafirmaLcdo);

             
     

             
             
             
             }
            
             
             }
            
            
         
            
            doc.close();
            archivo.close();
           // Desktop.getDesktop().open(file);
            
            
        } catch (DocumentException | IOException e) {
           System.out.println(e);
           JOptionPane.showMessageDialog(null, "NO SE CONSIGUE LA CARPETA FUNDAGINEBRA EN DISCO C", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
     
     
     
     
     
     
     
     
     
     
     
     
     
     public void Header(PdfWriter writer) throws IOException{
      

         try   {
             
             
            Paragraph fecha = new Paragraph();
            Font negrita = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL, BaseColor.BLACK);
            fecha.add(Chunk.NEWLINE);
            SimpleDateFormat FormatoFecha = new SimpleDateFormat("dd/MM/yyyy");
            String Fecha = FormatoFecha.format(Menu.FechaAdmin.getDate());
            String Hora = Menu.Time.getText()+" "+Menu.jLabel102.getText();
            //fecha.add( "  Fecha: " + Fecha + "\n" +"  Hora: "+ Hora ) ;

             
            String fechaN = new SimpleDateFormat("yyyy/MM/dd").format(FechaNacimiento.getDate());
            String [] dateParts1= fechaN.split("/");
            String an1 = dateParts1[0];
            String mes1 = dateParts1[1];
            String dia1 = dateParts1[2];
            
            
            String an_actual = Validar.fecha_actual();
            String mes_actual = Validar.fecha_mes();
            String dia_actual = Validar.fecha_dia();
            
            
            
        
            
            int diferenciadia=Integer.parseInt(dia_actual)- Integer.parseInt(dia1);
            int diferenciames=Integer.parseInt(mes_actual)- Integer.parseInt(mes1);
            int diferencian=Integer.parseInt(an_actual)- Integer.parseInt(an1);;
        

            
   if (diferenciames < 0 || (diferenciames == 0 && diferenciadia < 0)) {
        diferencian = diferencian - 1;
    }
 
   
          

    
        
          
          
            BaseFont BF = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);    
            Font Letra = new Font(BF); 
            Paragraph saltolinea = new Paragraph();
          
             
               PdfContentByte CB = writer.getDirectContent();  
            BaseFont BF2 = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
  
          
            CB.beginText();
            CB.setFontAndSize(BF2, 12);
            CB.setTextMatrix(200, 800);
            CB.showText(empresa);
            CB.setFontAndSize(BF, 10);
            CB.setTextMatrix(260, 790);
            CB.showText(rif);
            CB.setFontAndSize(BF2, 10);
            CB.setTextMatrix(460, 780);
            CB.showText("FECHA: "+ Fecha);
            
            CB.setFontAndSize(BF2, 10);
            CB.setTextMatrix(460, 770);
            CB.showText("HORA: "+ Hora);
            
            CB.setFontAndSize(BF2, 8);
            CB.setTextMatrix(235, 740);
            CB.showText(ubicacion);
          
            CB.setFontAndSize(BF2, 8);
            CB.setTextMatrix(210, 730);
            CB.showText(telefonos); 
            CB.setTextMatrix(168, 725);
            CB.showText("__________________________________________________________________");
          
            CB.endText();
            
            
            
            
           }  catch(DocumentException de) {
        throw new ExceptionConverter(de);
   
    }
      }
     
      
        private void addFooter(PdfWriter writer) throws IOException{

    try {

        
        
        
             
            BaseFont BF = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);    
            Font Letra = new Font(BF); 
     
          
        
        
        
        
        
          
            PdfPTable Tablafirma = new PdfPTable(3); 
            Tablafirma.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
            Tablafirma.setWidthPercentage(100);  
            float[] medidaCeldasP = {3f, 3f, 3f };
            Tablafirma.setWidths(medidaCeldasP);
            Tablafirma.setHorizontalAlignment(Element.ALIGN_CENTER);
            Tablafirma.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
        
            Paragraph tPcolumna1 = new Paragraph("www.cmollca.com");
            tPcolumna1.getFont().setStyle(Font.BOLD);
            tPcolumna1.getFont().setSize(8);        
            tPcolumna1.setFont(Letra);
            tPcolumna1.setAlignment(Element.ALIGN_CENTER);
            Tablafirma.addCell(tPcolumna1);

                
            Paragraph tPcolumna2 = new Paragraph("____________________ \n Firma");
            tPcolumna2.getFont().setStyle(Font.BOLD);
            tPcolumna2.getFont().setSize(8);        
            tPcolumna2.setFont(Letra);
            tPcolumna2.setAlignment(Element.ALIGN_CENTER);
            Tablafirma.addCell(tPcolumna2);

            Paragraph tPcolumna3 = new Paragraph( " " + writer.getPageNumber()+ " Pág");
            tPcolumna3.getFont().setStyle(Font.BOLD);
            tPcolumna3.getFont().setSize(8);        
            tPcolumna3.setFont(Letra);
            tPcolumna3.setAlignment(Element.ALIGN_CENTER);
            Tablafirma.addCell(tPcolumna3); 
             

     
        Tablafirma.setTotalWidth(527);
        Tablafirma.setLockedWidth(false);
        Tablafirma.getDefaultCell().setFixedHeight(40);
        Tablafirma.getDefaultCell().setBorder(Rectangle.TOP);
        Tablafirma.getDefaultCell().setBorderColor(BaseColor.LIGHT_GRAY);
        
        
        
        // write page
        PdfContentByte canvas = writer.getDirectContent();
        canvas.beginMarkedContentSequence(PdfName.ARTIFACT);
        Tablafirma.writeSelectedRows(0, -1, 34, 50, canvas);  
        canvas.endMarkedContentSequence();
    } catch(DocumentException de) {
        throw new ExceptionConverter(de);
   
    }
}
    
        
        private void addFooterConfirma(PdfWriter writer) throws IOException{
                 
     knowaboutlcdo();    
    try {

            BaseFont BF = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);    
            Font Letra = new Font(BF); 
     
          

           
           PdfPTable TablafirmaLcdo = new PdfPTable(1); 
           TablafirmaLcdo.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
           TablafirmaLcdo.setWidthPercentage(100);  
           float[] medidaCeldasFirma = {20f};
           TablafirmaLcdo.setWidths(medidaCeldasFirma);
           TablafirmaLcdo.setHorizontalAlignment(Element.ALIGN_CENTER);
           TablafirmaLcdo.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
            
           Paragraph tPcolumnaFirma1 = new Paragraph("________________ \n Lcdo/a "+ NameOfLcdo);
           tPcolumnaFirma1.getFont().setStyle(Font.BOLD);
           tPcolumnaFirma1.getFont().setSize(8);        
           tPcolumnaFirma1.setFont(Letra);
           tPcolumnaFirma1.setAlignment(Element.ALIGN_CENTER);
           TablafirmaLcdo.addCell(tPcolumnaFirma1);

            
            
            
          PdfPTable Tablafirma = new PdfPTable(3); 
          Tablafirma.getDefaultCell().setBorder(PdfPCell.NO_BORDER);
          Tablafirma.setWidthPercentage(100);  
          float[] medidaCeldasP = {3f, 1f, 3f };
          Tablafirma.setWidths(medidaCeldasP);
          Tablafirma.setHorizontalAlignment(Element.ALIGN_CENTER);
          Tablafirma.getDefaultCell().setHorizontalAlignment(Element.ALIGN_CENTER);
        
          Paragraph tPcolumna1 = new Paragraph("\n\n\n\n\n "+piepagina);
          tPcolumna1.getFont().setStyle(Font.BOLD);
          tPcolumna1.getFont().setSize(8);        
          tPcolumna1.setFont(Letra);
          tPcolumna1.setAlignment(Element.ALIGN_CENTER);
          Tablafirma.addCell(tPcolumna1);


            
            
            
         com.itextpdf.text.Image FirmaLcdo = com.itextpdf.text.Image.getInstance("C:\\Fundaginebra\\dist\\imagen.bin");
         FirmaLcdo.setAlignment(Chunk.ALIGN_CENTER);
         Tablafirma.addCell(FirmaLcdo);
   

         

            
            
            
            
            
            
        Paragraph tPcolumna3 = new Paragraph( "\n\n\n\n\n" + writer.getPageNumber()+ " Pág");
        tPcolumna3.getFont().setStyle(Font.BOLD);
        tPcolumna3.getFont().setSize(8);        
        tPcolumna3.setFont(Letra);
        tPcolumna3.setAlignment(Element.ALIGN_CENTER);
        Tablafirma.addCell(tPcolumna3); 
             

     
        Tablafirma.setTotalWidth(527);
        Tablafirma.setLockedWidth(false);
        Tablafirma.getDefaultCell().setFixedHeight(40);
        Tablafirma.getDefaultCell().setBorder(Rectangle.TOP);
        Tablafirma.getDefaultCell().setBorderColor(BaseColor.LIGHT_GRAY);
        
        TablafirmaLcdo.setTotalWidth(527);
        TablafirmaLcdo.setLockedWidth(false);
        TablafirmaLcdo.getDefaultCell().setFixedHeight(40);
        TablafirmaLcdo.getDefaultCell().setBorder(Rectangle.TOP);
        TablafirmaLcdo.getDefaultCell().setBorderColor(BaseColor.LIGHT_GRAY);
        
        // write page
        PdfContentByte canvas = writer.getDirectContent();
        canvas.beginMarkedContentSequence(PdfName.ARTIFACT);
        

        Tablafirma.writeSelectedRows(0, -1, 34, 120, canvas);
        TablafirmaLcdo.writeSelectedRows(0, -1, 34, 80, canvas);
        
        canvas.endMarkedContentSequence();
    } catch(DocumentException de) {
        throw new ExceptionConverter(de);
   
    }
}







        
        
        
        
        
        
        
        
        String NameOfLcdo;
     
     public void knowaboutlcdo(){
     
    Connection con;
    EnlaceBd cn = new EnlaceBd();
    PreparedStatement ps;
    ResultSet rs; 
         
         
         try{
         
       String query="Select FirmaLcdo from tableinfo where idinfo=? ";
       
       con = EnlaceBd.getConnection();
       ps = con.prepareStatement(query);
       ps.setInt(1, 1);
       rs=ps.executeQuery();
         
        if(rs.next()){
       NameOfLcdo= rs.getString("FirmaLcdo");
    
         }
       
       
       
       
         }catch(Exception e){ System.out.println(e);}
     }
     
     
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    /*
         
            private void addHeader(PdfWriter writer){
   
                
                
                PdfPTable footer = new PdfPTable(1);
    try {

        footer.setWidths(new int[]{100});
        footer.setTotalWidth(527);
        footer.setLockedWidth(false);
        footer.getDefaultCell().setFixedHeight(40);
        footer.getDefaultCell().setBorder(Rectangle.TOP);
        footer.getDefaultCell().setBorderColor(BaseColor.LIGHT_GRAY);

        // add current page count
        footer.getDefaultCell().setHorizontalAlignment(Element.ALIGN_LEFT);
        footer.addCell(new Phrase(String.format("@Fundaginebra                                              |    www.fundaginebra.org    |                                            "+ writer.getPageNumber()+ " | Pág") , new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL, BaseColor.BLACK)));

        // write page
        PdfContentByte canvas = writer.getDirectContent();
        canvas.beginMarkedContentSequence(PdfName.ARTIFACT);
        footer.writeSelectedRows(0, -1, 34, 50, canvas);
        canvas.endMarkedContentSequence();
    } catch(DocumentException de) {
        throw new ExceptionConverter(de);
   
    }
}
         
         
 
   
   
   
   
   */
   
   
   
         
         
     public void Callpacient() {  
     TXTPcedula.setEnabled(false);  
       
         Connection con;
    EnlaceBd cn = new EnlaceBd();
    PreparedStatement ps;
    ResultSet rs;
     
         String Cedula = TXTPcedula.getText();
        
        try{
   
       String query="SELECT Idpaciente from table_paciente where Cedula=? ";
       
       con = cn.getConnection();
       ps = con.prepareStatement(query);
       ps.setString(1, Cedula);
       rs=ps.executeQuery();
      
if(TXTPcedula.getText().equals("V-") || TXTPcedula.getText().equals("") )
{
JOptionPane.showMessageDialog(null, "EL CAMPO CÉDULA NO PUEDE ESTAR VACIO Y DEBE LLEVAR V-", "CAMPO VACIO", 1);
}
       
      else if(rs.next())
       {
        

      IdPaciente= rs.getInt("Idpaciente");
      IdPacientess.setText(Integer.toString(IdPaciente));
      
      
      try{
      String sql2 = "SELECT Nombre, Apellido, Cedula, Telefono, Correo, Direccion, Sexo, date_format(FechNacimiento, '%d/%m/%Y') AS Fecha FROM table_paciente WHERE Idpaciente=? ";
      con = cn.getConnection();
      ps = con.prepareStatement(sql2);
      ps.setInt(1, IdPaciente);
      rs=ps.executeQuery();
     
       
      if(rs.next()){
     
 
      String nombre= rs.getString("Nombre");
      String apellido= rs.getString("Apellido");
      String cedula= rs.getString("Cedula");
      String telefono= rs.getString("Telefono");
      String correo= rs.getString("Correo");
      String direccion= rs.getString("Direccion");
      String sexo= rs.getString("Sexo");
      String nacimiento= rs.getString("Fecha");
     
      
      
      if(sexo.equals("Femenino") ){Sexo="Femenino"; JRfemenino.setSelected(true); JRMasculino.setSelected(false);}
      else if(sexo.equals("Masculino") ){Sexo="Masculino"; JRMasculino.setSelected(true); JRfemenino.setSelected(false);}
      TXTPnombre.setText(nombre);
      TXTPapellido.setText(apellido);
      TXTPcorreo.setText(correo);
      TXTPtelefono.setText(telefono);
      TXTPdireccion.setText(direccion);

      
      
      
      SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
      FechaNacimiento.setDate(formato.parse(nacimiento));
JPregistro.setVisible(true);
   
      }

      
    

       }catch(Exception e){JOptionPane.showMessageDialog(null, e);}
       
       
       }
      
      
      
      
       else{
          
          
          
          
       
          
          
          
           if (JOptionPane.showConfirmDialog(rootPane, " El paciente no se encuentra registrado ¿Desea registrarlo?",
            "Registro Paciente", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)  {
  
                    
                    

      
                    
                    
       ActivarCampos();
       limpiarCamposNoregistro();
       JPregistro.setVisible(true);
       BtnSearch.setEnabled(false);
         
         

         
        }   
        
        else{  BtnAgregar.setVisible(false); BtnSearch.setEnabled(true); TXTPcedula.setEnabled(true);  }
    
        
       
    }                                        
         }catch(Exception e){ JOptionPane.showMessageDialog(null, e);}
         
             
             
       
       }
       
     
     
     public void AgregarPaciente(){                                             
    
    Connection con;
    EnlaceBd cn = new EnlaceBd();
    PreparedStatement ps;
    ResultSet rs;
    

          try {

              
                    
        java.sql.Date fechaU;
        Date dateU = FechaNacimiento.getDate();
        long dU = dateU.getTime();
        fechaU = new java.sql.Date(dU);
        
        
        
            String fecha = new SimpleDateFormat("yyyy/MM/dd").format(FechaNacimiento.getDate());
            String [] dateParts= fecha.split("/");
            String an = dateParts[0];
            String mes = dateParts[1];
            String dia = dateParts[2];
            String an_actual = Validar.fecha_actual();

            int edad;
            edad= Integer.parseInt(an_actual)-Integer.parseInt(an);
        
        
        
        
              
              
            String sql = "INSERT INTO table_paciente (Nombre, Apellido, Cedula,Telefono,Correo,Direccion, Sexo, FechNacimiento, edad) VALUES (?,?,?,?,?,?,?,?,?)";
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
      
            ps.setString(1, TXTPnombre.getText());
            ps.setString(2, TXTPapellido.getText());
            ps.setString(3, TXTPcedula.getText());
            ps.setString(4, TXTPtelefono.getText());
            ps.setString(5, TXTPcorreo.getText());
            ps.setString(6, TXTPdireccion.getText());
            ps.setString(7, Sexo);
            ps.setDate(8, fechaU);
            ps.setInt(9, edad);
            ps.execute();
  
            
            
  JOptionPane.showMessageDialog(null, "EL PACIENTE HA SIDO REGISTRADO","REGISTRO DE PACIENTES", 1);
        } catch (Exception e) {
      
            JOptionPane.showMessageDialog(null, e);
        }


      
          
          
    } 
     

    
    public void guardar_pdf(int codigo, int idexamen, int idpaciente, int idusuario, String Fecha, File ruta) {
        
        
   
        
        PdfDAO1 pa = new PdfDAO1();
        PdfVO po = new PdfVO();
        po.setCodigopdf(codigo);
        po.setIdexamen(idexamen);
        po.setIdpaciente(idpaciente);
        po.setIdusuario(idusuario);
        po.setFecha(Fecha);
        
        try {
            byte[] pdf = new byte[(int) ruta.length()];
            InputStream input = new FileInputStream(ruta);
            input.read(pdf);
            po.setArchivopdf(pdf);
        } catch (IOException ex) {
            po.setArchivopdf(null);
            System.out.println("Error al agregar archivo pdf "+ex.getMessage());
        }
        pa.Agregar_PdfVO(po);
    }

    String PdfNames;
    
    public void guardarReporte()
    {

      
        ruta_archivo="C://Fundaginebra//Reportes//"+PdfNames+".pdf";
        int idexamen = 1002;
        int idpaciente= Integer.parseInt(IdPacientess.getText());

        String Fecha = new SimpleDateFormat("yyyy-MM-dd").format(Menu.FechaAdmin.getDate());
        sql s = new sql();
        
        int codigo = s.auto_increment("SELECT MAX(codigopdf) FROM table_laboratorio;");
        File ruta = new File(ruta_archivo);
       
        
        
        
        if ( ruta_archivo.trim().length() != 0) {
            guardar_pdf(codigo, idexamen, idpaciente, idusuario, Fecha, ruta);
 
         //   tpdf.visualizar_PdfVO(tabla);
            ruta_archivo = "";
           // activa_boton(false, false, false);
  
        } else {
            JOptionPane.showMessageDialog(null, "Rellenar todo los campos");
        }
    
    }
     /*
         public void seleccionar_pdf() {
        JFileChooser j = new JFileChooser();
        FileNameExtensionFilter fi = new FileNameExtensionFilter("pdf", "pdf");
        j.setFileFilter(fi);
        int se = j.showOpenDialog(this);
        if (se == 0) {
            this.btnseleccionar.setText("" + j.getSelectedFile().getName());
            ruta_archivo = j.getSelectedFile().getAbsolutePath();

        } else {
        }
    }
*/
     
     
     
     
     
     
     
     
     
     
     
     
     
          public void ActivarCampos() {
   
                 TXTPnombre.setEditable(true);
                 TXTPapellido.setEditable(true);
                 TXTPcorreo.setEditable(true);
                 TXTPtelefono.setEditable(true);
                 TXTPdireccion.setEditable(true);
                 JRMasculino.setEnabled(true);
                 JRfemenino.setEnabled(true);
                 FechaNacimiento.setEnabled(true);
                 BtnAgregar.setEnabled(true);
                 BtnAgregar.setVisible(true);
                
                 
       
           
    }
    
                
    public void limpiarCamposNoregistro() {
      TXTPnombre.setText("");
      TXTPapellido.setText("");
      TXTPcorreo.setText("");
      TXTPtelefono.setText("");
      TXTPdireccion.setText("");
      JRMasculino.setSelected(true);
      JRfemenino.setSelected(false);
      Sexo="Masculino";
      BtnAgregar.setEnabled(true); 
      FechaNacimiento.setCalendar(null);
    }  
    
       
                   public void DesactivarCampos() {
   
                 TXTPnombre.setEditable(false);
                 TXTPapellido.setEditable(false);
                 TXTPcorreo.setEditable(false);
                 TXTPtelefono.setEditable(false);
                 TXTPdireccion.setEditable(false);
                 JRMasculino.setEnabled(false);
                 JRfemenino.setEnabled(false);
                 FechaNacimiento.setEnabled(false);
                 BtnAgregar.setEnabled(false);
               
       
           
    }
     
     
     
     
     
     

    String Sexo;
    int IdPaciente;
    
    
    public void limpiarCampos() {
      TXTPnombre.setText("");
      TXTPapellido.setText("");
      TXTPcedula.setText("V-");
      TXTPcorreo.setText("");
      TXTPtelefono.setText("");
      TXTPdireccion.setText("");
      JRMasculino.setSelected(true);
      JRfemenino.setSelected(false);
      Sexo="Masculino";
      BtnAgregar.setEnabled(true);  
      FechaNacimiento.setCalendar(null);
    }
    
    
        
        void limpiarTabla() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }
        
        
   
        

   int Maxid;
             public void MaxIdestudios() {
   Connection con;
    EnlaceBd cn = new EnlaceBd();
    PreparedStatement ps = null;
    ResultSet rs;
    
   
       try {

            String sql = "SELECT MAX(COdigopdf) from table_laboratorio ";
            
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
            Maxid= rs.getInt("MAX(codigopdf)")+1;
        
            }
            
          
            

        } catch (Exception e) { JOptionPane.showMessageDialog(null, e);}
     
       finally {
            try {
                ps.close();
               cn.desconectar();
            } catch (Exception ex) {
            }
        }
     
     
     }
    
     
           public void cancelarexamen() 
        
        {
        
        
              jButton34.setEnabled(true);
        
              TxtNeutrofilos.setText("");
              TxtHemoglobina.setText("");
              TxtHematocrito.setText("");
              TxtVCM.setText("");
              TXtCHCM.setText("");
              TxtLinfocitos.setText("");
              TxtLeucocitos.setText("");
              TxtPlaquetas.setText("");
                   
              
              
              
              
                    TXTGLICEMIA.setText("");
                    TXTUREA.setText("");
                    TXTCREATININA.setText("");
                    TXTACIDOURICO.setText("");
                    TXTCOLESTEROL.setText("");
                    TXTRIGLICERIDOS.setText("");
                    TXTHDL.setText("");
                    TXTLDL.setText("");
                    TXTVLDL.setText("");
                    TXTBILITOTAL.setText("");
                    TXTBILIDIRECTA.setText("");
                    TXTBILIINDIRECTA.setText("");
                    TXTPROTEINAS.setText("");
                    TXTALBUMINA.setText("");
                    TXTGLOBULINAS.setText("");
                    TXTRELACION.setText("");
                    TXTTGO.setText("");
                    TXTTGP.setText("");
                    TXTCALCIO.setText("");
                    TXTFOSFATA.setText("");
                   
                    
                    
                    
                    TxtOlor1.setText("");
                    TxtDensidad.setText("");
                    TxtLeucositosOrina.setText("");
                    TxtHematies.setText("");
                    TxtCelulasredondas.setText("");
                    TxtFilamentos.setText("");
                    JtextMicroscopio.setText("");
                    TXTPROTROMBINA.setText("");
                    TXTPARCIAL.setText("");
                    TXTVSG.setText("");
        
        }
           
         
           
           
           public void ActualizarReferencia()   {
                   
                   

        Connection con=null;
        EnlaceBd cn = new EnlaceBd();
        PreparedStatement ps=null;
        ResultSet rs=null;

        try {
            String sql = "update refencia_hematologia set Leucocitos=?,Linfocitos=?,Neutrofilos=?,Hemoglobina=?,Hematocrito=?,VCM=?,CHCM=?,Plaquetas=?  " ;
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            ps.setString(1, TxtLeucocitos1.getText());
            ps.setString(2, TxtLinfocitos1.getText());
            ps.setString(3, TxtNeutrofilos1.getText());
            ps.setString(4, TxtHemoglobina1.getText());
            ps.setString(5, TxtHematocrito1.getText());
            ps.setString(6, TxtVCM1.getText());
            ps.setString(7, TXtCHCM1.getText());
            ps.setString(8, TxtPlaquetas1.getText());
            int res = ps.executeUpdate();
            
        } catch (Exception e) {
            System.out.println(e);
        }
           
           
        
        
        
        
        
        
        
        
        
             try {
   String sql = "UPDATE referencia_qumicasanguinea SET GLICEMIA=?, UREA=?, CREATININA=?, ACIDO_URICO=?,COLESTEROL=?, TRIGLICERIDOS=?, HDL=?,LDL=?,VLDL=?,BILITOTAL=?,BILIDIRECTA=?,BILIINDIRECTA=?,PROTEINAS_TOTALES=?,ALBUMINA=?,GLOBULINAS=?,RELACION=?,TGO=?,TGP=?,CALCIO=?,FOSFATASA=?";    
                    

            
            
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            ps.setString(1, TXTGLICEMIA1.getText());
            ps.setString(2, TXTUREA1.getText());
            ps.setString(3, TXTCREATININA1.getText());
            ps.setString(4, TXTACIDOURICO1.getText());
            ps.setString(5, TXTCOLESTEROL1.getText());
            ps.setString(6, TXTRIGLICERIDOS1.getText());
            ps.setString(7, TXTHDL1.getText());
            ps.setString(8, TXTLDL1.getText());
            
            ps.setString(9, TXTVLDL1.getText());
            ps.setString(10, TXTBILITOTAL1.getText());
            ps.setString(11, TXTBILIDIRECTA1.getText());
            ps.setString(12, TXTBILIINDIRECTA1.getText());
            ps.setString(13, TXTPROTEINAS1.getText());
            ps.setString(14, TXTALBUMINA1.getText());
            ps.setString(15, TXTGLOBULINAS1.getText());
            ps.setString(16, TXTRELACION1.getText());
            
            ps.setString(17, TXTTGO1.getText());
            ps.setString(18, TXTTGP1.getText());
            ps.setString(19, TXTCALCIO1.getText());
            ps.setString(20, TXTFOSFATA1.getText());
      
            
            
            
            
            
            int res = ps.executeUpdate();

            if (res >= 1) {
                JOptionPane.showMessageDialog(null, "LOS VALORES REFENCIALES HAN SIDO MODIFICADOS", "VALORES REFENCIALES", 1);
            } else {
                JOptionPane.showMessageDialog(null, "Fallo al actualizar los datos....");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
           
        
        
    
        
        
        
        
        
        
        
                  }
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
 
        
          public void CallReferencia() {
   Connection con=null;
   EnlaceBd cn = new EnlaceBd();
   PreparedStatement ps=null;
   ResultSet rs=null;
         
        try {

            String sql = "select * from refencia_hematologia";

            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                String info0 = rs.getString("Leucocitos");
                String info1 = rs.getString("Linfocitos");
                String info2 = rs.getString("Neutrofilos");
                String info3 = rs.getString("Hemoglobina");
                String info4 = rs.getString("Hematocrito");
                String info5 = rs.getString("VCM");
                String info6 = rs.getString("CHCM");
                String info7 = rs.getString("Plaquetas");
                
         TxtLeucocitos1.setText(info0); 
         TxtLinfocitos1.setText(info1);
         TxtNeutrofilos1.setText(info2);
         TxtHemoglobina1.setText(info3);
         TxtHematocrito1.setText(info4);
         TxtVCM1.setText(info5);
         TXtCHCM1.setText(info6);
         TxtPlaquetas1.setText(info7); 
                
            }

        } catch (Exception e) {System.out.println(e);
        }  
        
          finally {
            try {
                ps.close();
               cn.desconectar();
            } catch (Exception ex) {
            }
            }
            
        
        
          try {

            String sql2 = "SELECT * FROM referencia_qumicasanguinea";

            con = cn.getConnection();
            ps = con.prepareStatement(sql2);
            rs = ps.executeQuery();
            if (rs.next()) {
                String info0 = rs.getString("GLICEMIA");
                String info1 = rs.getString("UREA");
                String info2 = rs.getString("CREATININA");
                String info3 = rs.getString("ACIDO_URICO");
                String info4 = rs.getString("COLESTEROL");
                String info5 = rs.getString("TRIGLICERIDOS");
                String info6 = rs.getString("HDL");
                String info7 = rs.getString("LDL");
                String info8 = rs.getString("VLDL");
                String info9 = rs.getString("BILITOTAL");
                String info10 = rs.getString("BILIDIRECTA");
                String info11 = rs.getString("BILIINDIRECTA");
                String info12 = rs.getString("PROTEINAS_TOTALES");
                String info13 = rs.getString("ALBUMINA");
                String info14 = rs.getString("GLOBULINAS");
                String info15 = rs.getString("RELACION");
                String info16 = rs.getString("TGO");
                String info17 = rs.getString("TGP");
                String info18 = rs.getString("CALCIO");
                String info19 = rs.getString("FOSFATASA");
                

                
                
         TXTGLICEMIA1.setText(info0); 
         TXTUREA1.setText(info1);
         TXTCREATININA1.setText(info2);
         TXTACIDOURICO1.setText(info3);
         TXTCOLESTEROL1.setText(info4);
         TXTRIGLICERIDOS1.setText(info5);
         TXTHDL1.setText(info6);
         TXTLDL1.setText(info7); 
                
         
         TXTVLDL1.setText(info8); 
         TXTBILITOTAL1.setText(info9);
         TXTBILIDIRECTA1.setText(info10);
         TXTBILIINDIRECTA1.setText(info11);
         TXTPROTEINAS1.setText(info12);
         TXTALBUMINA1.setText(info13);
         TXTGLOBULINAS1.setText(info14);
         TXTRELACION1.setText(info15);
         
         TXTTGO1.setText(info16); 
         TXTTGP1.setText(info17);
         TXTCALCIO1.setText(info18);
         TXTFOSFATA1.setText(info19);
     
         
         
         
 
            }

        } catch (Exception e) {System.out.println(e);
        }  
        
        
         finally {
            try {
                ps.close();
               cn.desconectar();
            } catch (Exception ex) {
            }
        
        }
        
        
        
        
          
          
          
               try {

            String sql = "select * from referencia_ppt";

            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            if (rs.next()) {
                String info0 = rs.getString("Rpc");
                String info1 = rs.getString("Dpc");
                String info2 = rs.getString("VRH");
                String info3 = rs.getString("M");
                String info4 = rs.getString("Niños");
                String info5 = rs.getString("UnidRPC");
                String info6 = rs.getString("UnidDPC");
                
         TXTRPC.setText(info0); 
         TXTDPC.setText(info1);
         TXTVRH.setText(info2);
         TXTM.setText(info3);
         TXTKIDS.setText(info4);
         TXTUNID.setText(info5);
         TXTUNID2.setText(info6);
            }

        } catch (Exception e) {System.out.println(e);
        }  
           finally {
            try {
                ps.close();
               cn.desconectar();
            } catch (Exception ex) {
            }
        
        }
        
    }
      public void ActualizarReferenciaPPT()   {
                   
                   

        Connection con=null;
        EnlaceBd cn = new EnlaceBd();
        PreparedStatement ps=null;
        ResultSet rs=null;

        try {
            String sql = "update referencia_ppt set Rpc=?,Dpc=?,VRH=?,M=?,Niños=?, UnidRPC=?, UnidDPC=? " ;
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            ps.setString(1, TXTRPC.getText());
            ps.setString(2, TXTDPC.getText());
            ps.setString(3, TXTVRH.getText());
            ps.setString(4, TXTM.getText());
            ps.setString(5, TXTKIDS.getText());
            ps.setString(6, TXTUNID.getText());
            ps.setString(7, TXTUNID2.getText());

            int res = ps.executeUpdate();

            if (res >= 1) {
                JOptionPane.showMessageDialog(null, "LOS VALORES REFENCIALES HAN SIDO MODIFICADOS", "VALORES REFENCIALES", 1);
            } else {
                JOptionPane.showMessageDialog(null, "Fallo al actualizar los datos....");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
           
           
                  }
               
      
      
      
      
                     public void AuditoriaAgregar(){
            
            
   Connection con=null;
   EnlaceBd cn = new EnlaceBd();
   PreparedStatement ps=null;
   ResultSet rs=null;
             try {
            
            String Fecha = new SimpleDateFormat("dd/MM/yyyy").format(Menu.FechaAdmin.getDate());
           
            String sql = "INSERT INTO table_auditoria (IdUsuario, IdPersonal, Accion,FechaMov) values (?,?,?,?)";
            String accion= "Agrego al paciente "+ TXTPnombre.getText()+" "+TXTPapellido.getText() +" " ;
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            ps.setInt(1, idusuario);
            ps.setInt(2, idusuario);
            ps.setString(3,accion);
            ps.setString(4,Fecha);

             ps.executeUpdate();

            
        } catch (Exception e) {System.out.println(e);}
       finally {
            try {
                ps.close();
                cn.desconectar();
            } catch (Exception ex) { System.out.println(ex); }
           
        
    }
     
    }               
                    
          public void AuditoriaModificar(){
            
            
   Connection con=null;
   EnlaceBd cn = new EnlaceBd();
   PreparedStatement ps=null;
   ResultSet rs=null;
             try {
            
            String Fecha = new SimpleDateFormat("dd/MM/yyyy").format(Menu.FechaAdmin.getDate());
           
            String sql = "INSERT INTO table_auditoria (IdUsuario, IdPersonal, Accion,FechaMov) values (?,?,?,?)";
            String accion= "Modificó los valores referenciales de: Perfil20" ;
            con = cn.getConnection();
            ps = con.prepareStatement(sql);
            ps.setInt(1, idusuario);
            ps.setInt(2, idusuario);
            ps.setString(3,accion);
            ps.setString(4,Fecha);

             ps.executeUpdate();

            
        } catch (Exception e) {System.out.println(e);}
       finally {
            try {
                ps.close();
                cn.desconectar();
            } catch (Exception ex) { System.out.println(ex); }
           
        
    }
     
    }                                        
         
      
      
               
  DefaultTableModel modelo = new DefaultTableModel();
 

  Temporal MP = new Temporal();
  Mprincipal Menu = new Mprincipal();
  int idusuario=MP.getTexto();

  Encriptar encriptar = new Encriptar();
  JCPacientes pacientes  = new JCPacientes();
  JPacientesDao pacientesDao  = new JPacientesDao();     
  Tabla_PdfVO tpdf = new Tabla_PdfVO();   
  String ruta_archivo = "";
  String Usuario;
  Validar va = new Validar();
  
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnCancelar;
    private javax.swing.JButton BtnSearch;
    private javax.swing.JLabel FechaAc6;
    private javax.swing.JLabel FechaAc8;
    private com.toedter.calendar.JDateChooser FechaNacimiento;
    private javax.swing.JTextField IdPacientess;
    private javax.swing.JComboBox<String> JCAspect;
    private javax.swing.JComboBox<String> JCEP;
    private javax.swing.JComboBox<String> JCaspecto;
    private javax.swing.JComboBox<String> JCbacterias;
    private javax.swing.JComboBox<String> JCbilirrubina;
    private javax.swing.JComboBox<String> JCcolor1;
    private javax.swing.JComboBox<String> JCcolor4;
    private javax.swing.JComboBox<String> JCconsistencia;
    private javax.swing.JComboBox<String> JCcuerposCe;
    private javax.swing.JComboBox<String> JCglucosa1;
    private javax.swing.JCheckBox JCheckppt;
    private javax.swing.JComboBox<String> JChemoglobina;
    private javax.swing.JComboBox<String> JChemoglobina1;
    private javax.swing.JComboBox<String> JCmoco;
    private javax.swing.JComboBox<String> JCnitridos;
    private javax.swing.JComboBox<String> JColor;
    private javax.swing.JComboBox<String> JCph;
    private javax.swing.JComboBox<String> JCproteinas;
    private javax.swing.JComboBox<String> JCreaccion1;
    private javax.swing.JComboBox<String> JCrestos;
    private javax.swing.JComboBox<String> JCsangre1;
    private javax.swing.JComboBox<String> JCurobilinogeno1;
    private javax.swing.JPanel JPregistro;
    private javax.swing.JRadioButton JRMasculino;
    private javax.swing.JRadioButton JRfemenino;
    private javax.swing.JCheckBox JcheckCopro;
    private javax.swing.JCheckBox JcheckUro;
    private javax.swing.JPanel JpanelCopro;
    private javax.swing.JPanel JpanelUro;
    private javax.swing.JRadioButton JradioPerfil;
    private javax.swing.JRadioButton JradioPtt;
    private javax.swing.JRadioButton JradioUroanalisis;
    private javax.swing.JRadioButton Jradioreferencias;
    private javax.swing.JTextArea JtextMicroscopio;
    private javax.swing.JTextField TXTACIDOURICO;
    private javax.swing.JTextField TXTACIDOURICO1;
    private javax.swing.JTextField TXTALBUMINA;
    private javax.swing.JTextField TXTALBUMINA1;
    private javax.swing.JTextField TXTBILIDIRECTA;
    private javax.swing.JTextField TXTBILIDIRECTA1;
    private javax.swing.JTextField TXTBILIINDIRECTA;
    private javax.swing.JTextField TXTBILIINDIRECTA1;
    private javax.swing.JTextField TXTBILITOTAL;
    private javax.swing.JTextField TXTBILITOTAL1;
    private javax.swing.JTextField TXTCALCIO;
    private javax.swing.JTextField TXTCALCIO1;
    private javax.swing.JTextField TXTCOLESTEROL;
    private javax.swing.JTextField TXTCOLESTEROL1;
    private javax.swing.JTextField TXTCREATININA;
    private javax.swing.JTextField TXTCREATININA1;
    private javax.swing.JTextField TXTDPC;
    private javax.swing.JTextField TXTFOSFATA;
    private javax.swing.JTextField TXTFOSFATA1;
    private javax.swing.JTextField TXTGLICEMIA;
    private javax.swing.JTextField TXTGLICEMIA1;
    private javax.swing.JTextField TXTGLOBULINAS;
    private javax.swing.JTextField TXTGLOBULINAS1;
    private javax.swing.JTextField TXTHDL;
    private javax.swing.JTextField TXTHDL1;
    private javax.swing.JComboBox<String> TXTHLV;
    private javax.swing.JTextField TXTKIDS;
    private javax.swing.JTextField TXTLDL;
    private javax.swing.JTextField TXTLDL1;
    private javax.swing.JTextField TXTM;
    private javax.swing.JTextField TXTPARCIAL;
    private javax.swing.JTextField TXTPROTEINAS;
    private javax.swing.JTextField TXTPROTEINAS1;
    private javax.swing.JTextField TXTPROTROMBINA;
    private javax.swing.JTextField TXTPapellido;
    private javax.swing.JTextField TXTPcedula;
    private javax.swing.JTextField TXTPcorreo;
    private javax.swing.JTextArea TXTPdireccion;
    private javax.swing.JTextField TXTPnombre;
    private javax.swing.JFormattedTextField TXTPtelefono;
    private javax.swing.JTextField TXTRELACION;
    private javax.swing.JTextField TXTRELACION1;
    private javax.swing.JTextField TXTRIGLICERIDOS;
    private javax.swing.JTextField TXTRIGLICERIDOS1;
    private javax.swing.JTextField TXTRPC;
    private javax.swing.JTextField TXTTGO;
    private javax.swing.JTextField TXTTGO1;
    private javax.swing.JTextField TXTTGP;
    private javax.swing.JTextField TXTTGP1;
    private javax.swing.JTextField TXTUNID;
    private javax.swing.JTextField TXTUNID2;
    private javax.swing.JTextField TXTUREA;
    private javax.swing.JTextField TXTUREA1;
    private javax.swing.JTextField TXTVDRL;
    private javax.swing.JTextField TXTVLDL;
    private javax.swing.JTextField TXTVLDL1;
    private javax.swing.JTextField TXTVRH;
    private javax.swing.JTextField TXTVSG;
    private javax.swing.JTextField TXtCHCM;
    private javax.swing.JTextField TXtCHCM1;
    private javax.swing.JTextField TxtCelulasredondas;
    private javax.swing.JTextField TxtDensidad;
    private javax.swing.JTextField TxtFilamentos;
    private javax.swing.JTextField TxtHematies;
    private javax.swing.JTextField TxtHematocrito;
    private javax.swing.JTextField TxtHematocrito1;
    private javax.swing.JTextField TxtHemoglobina;
    private javax.swing.JTextField TxtHemoglobina1;
    private javax.swing.JTextField TxtLeucocitos;
    private javax.swing.JTextField TxtLeucocitos1;
    private javax.swing.JTextField TxtLeucositosOrina;
    private javax.swing.JTextField TxtLinfocitos;
    private javax.swing.JTextField TxtLinfocitos1;
    private javax.swing.JTextField TxtNeutrofilos;
    private javax.swing.JTextField TxtNeutrofilos1;
    private javax.swing.JTextField TxtOlor1;
    private javax.swing.JTextField TxtPlaquetas;
    private javax.swing.JTextField TxtPlaquetas1;
    private javax.swing.JTextField TxtVCM;
    private javax.swing.JTextField TxtVCM1;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton34;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
